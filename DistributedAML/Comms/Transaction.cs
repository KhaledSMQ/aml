// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Transaction.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from Transaction.proto</summary>
public static partial class TransactionReflection {

  #region Descriptor
  /// <summary>File descriptor for Transaction.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static TransactionReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChFUcmFuc2FjdGlvbi5wcm90byLoAgoLVHJhbnNhY3Rpb24SCgoCSWQYASAB",
          "KAkSDgoGQW1vdW50GAIgASgBEioKBHR5cGUYAyABKA4yHC5UcmFuc2FjdGlv",
          "bi5UcmFuc2FjdGlvblR5cGUSIAoFUm9sZXMYBCADKAsyES5UcmFuc2FjdGlv",
          "bi5Sb2xlGsUBCgRSb2xlEigKBFR5cGUYASABKA4yGi5UcmFuc2FjdGlvbi5S",
          "b2xlLlJvbGVUeXBlEhAKCFNvcnRDb2RlGAIgASgJEg8KB0FjY291bnQYAyAB",
          "KAkSDAoETmFtZRgEIAEoCRIPCgdBZGRyZXNzGAUgASgJIlEKCFJvbGVUeXBl",
          "Eg8KC0JlbmVmaWNpYXJ5EAASDgoKT3JpZ2luYXRvchABEhEKDUludGVybWVk",
          "aWFyeTEQAhIRCg1JbnRlcm1lZGlhcnkyEAMiJwoPVHJhbnNhY3Rpb25UeXBl",
          "EgkKBXR5cGUxEAASCQoFdHlwZTIQAWIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Transaction), global::Transaction.Parser, new[]{ "Id", "Amount", "Type", "Roles" }, null, new[]{ typeof(global::Transaction.Types.TransactionType) }, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Transaction.Types.Role), global::Transaction.Types.Role.Parser, new[]{ "Type", "SortCode", "Account", "Name", "Address" }, null, new[]{ typeof(global::Transaction.Types.Role.Types.RoleType) }, null)})
        }));
  }
  #endregion

}
#region Messages
public sealed partial class Transaction : pb::IMessage<Transaction> {
  private static readonly pb::MessageParser<Transaction> _parser = new pb::MessageParser<Transaction>(() => new Transaction());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Transaction> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TransactionReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Transaction() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Transaction(Transaction other) : this() {
    id_ = other.id_;
    amount_ = other.amount_;
    type_ = other.type_;
    roles_ = other.roles_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Transaction Clone() {
    return new Transaction(this);
  }

  /// <summary>Field number for the "Id" field.</summary>
  public const int IdFieldNumber = 1;
  private string id_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Id {
    get { return id_; }
    set {
      id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Amount" field.</summary>
  public const int AmountFieldNumber = 2;
  private double amount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Amount {
    get { return amount_; }
    set {
      amount_ = value;
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 3;
  private global::Transaction.Types.TransactionType type_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Transaction.Types.TransactionType Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "Roles" field.</summary>
  public const int RolesFieldNumber = 4;
  private static readonly pb::FieldCodec<global::Transaction.Types.Role> _repeated_roles_codec
      = pb::FieldCodec.ForMessage(34, global::Transaction.Types.Role.Parser);
  private readonly pbc::RepeatedField<global::Transaction.Types.Role> roles_ = new pbc::RepeatedField<global::Transaction.Types.Role>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Transaction.Types.Role> Roles {
    get { return roles_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Transaction);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Transaction other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Amount != other.Amount) return false;
    if (Type != other.Type) return false;
    if(!roles_.Equals(other.roles_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id.Length != 0) hash ^= Id.GetHashCode();
    if (Amount != 0D) hash ^= Amount.GetHashCode();
    if (Type != 0) hash ^= Type.GetHashCode();
    hash ^= roles_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (Amount != 0D) {
      output.WriteRawTag(17);
      output.WriteDouble(Amount);
    }
    if (Type != 0) {
      output.WriteRawTag(24);
      output.WriteEnum((int) Type);
    }
    roles_.WriteTo(output, _repeated_roles_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
    }
    if (Amount != 0D) {
      size += 1 + 8;
    }
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    size += roles_.CalculateSize(_repeated_roles_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Transaction other) {
    if (other == null) {
      return;
    }
    if (other.Id.Length != 0) {
      Id = other.Id;
    }
    if (other.Amount != 0D) {
      Amount = other.Amount;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    roles_.Add(other.roles_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
        case 17: {
          Amount = input.ReadDouble();
          break;
        }
        case 24: {
          type_ = (global::Transaction.Types.TransactionType) input.ReadEnum();
          break;
        }
        case 34: {
          roles_.AddEntriesFrom(input, _repeated_roles_codec);
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the Transaction message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public enum TransactionType {
      [pbr::OriginalName("type1")] Type1 = 0,
      [pbr::OriginalName("type2")] Type2 = 1,
    }

    public sealed partial class Role : pb::IMessage<Role> {
      private static readonly pb::MessageParser<Role> _parser = new pb::MessageParser<Role>(() => new Role());
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<Role> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::Transaction.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Role() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Role(Role other) : this() {
        type_ = other.type_;
        sortCode_ = other.sortCode_;
        account_ = other.account_;
        name_ = other.name_;
        address_ = other.address_;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public Role Clone() {
        return new Role(this);
      }

      /// <summary>Field number for the "Type" field.</summary>
      public const int TypeFieldNumber = 1;
      private global::Transaction.Types.Role.Types.RoleType type_ = 0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public global::Transaction.Types.Role.Types.RoleType Type {
        get { return type_; }
        set {
          type_ = value;
        }
      }

      /// <summary>Field number for the "SortCode" field.</summary>
      public const int SortCodeFieldNumber = 2;
      private string sortCode_ = "";
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public string SortCode {
        get { return sortCode_; }
        set {
          sortCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }

      /// <summary>Field number for the "Account" field.</summary>
      public const int AccountFieldNumber = 3;
      private string account_ = "";
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public string Account {
        get { return account_; }
        set {
          account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }

      /// <summary>Field number for the "Name" field.</summary>
      public const int NameFieldNumber = 4;
      private string name_ = "";
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public string Name {
        get { return name_; }
        set {
          name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }

      /// <summary>Field number for the "Address" field.</summary>
      public const int AddressFieldNumber = 5;
      private string address_ = "";
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public string Address {
        get { return address_; }
        set {
          address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as Role);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(Role other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Type != other.Type) return false;
        if (SortCode != other.SortCode) return false;
        if (Account != other.Account) return false;
        if (Name != other.Name) return false;
        if (Address != other.Address) return false;
        return true;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (Type != 0) hash ^= Type.GetHashCode();
        if (SortCode.Length != 0) hash ^= SortCode.GetHashCode();
        if (Account.Length != 0) hash ^= Account.GetHashCode();
        if (Name.Length != 0) hash ^= Name.GetHashCode();
        if (Address.Length != 0) hash ^= Address.GetHashCode();
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
        if (Type != 0) {
          output.WriteRawTag(8);
          output.WriteEnum((int) Type);
        }
        if (SortCode.Length != 0) {
          output.WriteRawTag(18);
          output.WriteString(SortCode);
        }
        if (Account.Length != 0) {
          output.WriteRawTag(26);
          output.WriteString(Account);
        }
        if (Name.Length != 0) {
          output.WriteRawTag(34);
          output.WriteString(Name);
        }
        if (Address.Length != 0) {
          output.WriteRawTag(42);
          output.WriteString(Address);
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (Type != 0) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
        }
        if (SortCode.Length != 0) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(SortCode);
        }
        if (Account.Length != 0) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
        }
        if (Name.Length != 0) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
        }
        if (Address.Length != 0) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(Role other) {
        if (other == null) {
          return;
        }
        if (other.Type != 0) {
          Type = other.Type;
        }
        if (other.SortCode.Length != 0) {
          SortCode = other.SortCode;
        }
        if (other.Account.Length != 0) {
          Account = other.Account;
        }
        if (other.Name.Length != 0) {
          Name = other.Name;
        }
        if (other.Address.Length != 0) {
          Address = other.Address;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              input.SkipLastField();
              break;
            case 8: {
              type_ = (global::Transaction.Types.Role.Types.RoleType) input.ReadEnum();
              break;
            }
            case 18: {
              SortCode = input.ReadString();
              break;
            }
            case 26: {
              Account = input.ReadString();
              break;
            }
            case 34: {
              Name = input.ReadString();
              break;
            }
            case 42: {
              Address = input.ReadString();
              break;
            }
          }
        }
      }

      #region Nested types
      /// <summary>Container for nested types declared in the Role message type.</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static partial class Types {
        public enum RoleType {
          [pbr::OriginalName("Beneficiary")] Beneficiary = 0,
          [pbr::OriginalName("Originator")] Originator = 1,
          [pbr::OriginalName("Intermediary1")] Intermediary1 = 2,
          [pbr::OriginalName("Intermediary2")] Intermediary2 = 3,
        }

      }
      #endregion

    }

  }
  #endregion

}

#endregion


#endregion Designer generated code
