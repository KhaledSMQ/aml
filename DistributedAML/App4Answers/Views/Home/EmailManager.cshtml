@using System
@using App4Answers.Models.A4Amodels
@using App4Answers.Models.A4Amodels.Base
@using App4Answers.Models.A4Amodels.EmailManager
@using Microsoft.AspNetCore.Mvc.Rendering
@using Microsoft.CodeAnalysis.CSharp.Syntax
@using Microsoft.AspNetCore.Http;
@using System.Web;
@using Newtonsoft.Json;
@inject IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "Email Manager";
    ViewData["RenderExpert"] = false;
    ViewData["Background"] = "/images/darkblue.png";
    ViewData["RenderAppStore"] = false;
    Layout = "_Layout";
}


<div class="row">
    <div class="col-sm-1">
    </div>
    <div class="col-sm-1">
    </div>

    <div class="col-sm-6" style="text-align:left;">
        <span  onclick="newMail();" style="cursor: pointer; color:white;font-size:20pt;" class="glyphicon-envelope" />
    </div>



    <div class="col-sm-3" style="text-align:right">
        <span style="color:white;">Email - Manager - @HttpContextAccessor.HttpContext.Session.GetString(ModelNames.SessionStrings.UserEmail.ToString()) - Role - @HttpContextAccessor.HttpContext.Session.GetString(ModelNames.SessionStrings.UserType.ToString())</span>
    </div>

    <div class="col-sm-1">
    </div>
</div>


<div class="row">

    <div class="col-sm-1">

    </div>

    <div class="col-sm-1" style="color: white; padding-right: 0px; margin-right: 0px" align="left">
        <div class="container-fluid" style="padding-top:23px">
            <ul class="nav  nav-stacked">
                <li class="a4amenu"><a class="a4amenu" asp-action="EmailManager" asp-route-objecttype="@ModelNames.ObjectTypes.Message" asp-route-verb="@ModelNames.Verb.List" asp-route-listtype="@A4AMailboxType.Inbox">Inbox</a></li>
                <li class="a4amenu"><a class="a4amenu" asp-action="EmailManager" asp-route-objecttype="@ModelNames.ObjectTypes.Message" asp-route-verb="@ModelNames.Verb.List" asp-route-listtype="@A4AMailboxType.Sent">Sent</a></li>
                <li class="a4amenu"><a class="a4amenu" asp-action="EmailManager" asp-route-objecttype="@ModelNames.ObjectTypes.Message" asp-route-verb="@ModelNames.Verb.List" asp-route-listtype="@A4AMailboxType.Draft">Drafts</a></li>
                <li class="a4amenu"><a class="a4amenu" asp-action="EmailManager" asp-route-objecttype="@ModelNames.ObjectTypes.Message" asp-route-verb="@ModelNames.Verb.List" asp-route-listtype="@A4AMailboxType.Trash">Trash</a></li>
                <li class="a4amenu"><a class="a4amenu" asp-action="EmailManager" asp-route-objecttype="@ModelNames.ObjectTypes.EmailRecord" asp-route-verb="@ModelNames.Verb.List" asp-route-listtype="@A4AMailboxType.None">Logs</a></li>

            </ul>
        </div>
    </div>

    <div class="col-sm-9" style="height:650px; background-color:gray; padding-left: 0px; margin-left: 0px; margin-top: 0px; vertical-align: top; padding-top: 0px; padding-right: 0px; margin-right:0px;" align="center">
        @if (Model is ViewModelListBase)
        {
            @Html.Partial("PartialView/ViewModelListViewerSmall");

        }
        else if (Model is ViewModelBase)
        {
            @Html.Partial("PartialView/ViewModelEditor");

        }
        else if (Model is A4AMailBoxViewModel)
        {
            @Html.Partial("PartialView/ViewModelMailBoxViewer");

        }
        else if (Model is string)
        {
            // empty default
        }
        else
        {
            throw new Exception($"Unexpected ViewModel type - {Model.GetType().Name}");
        }
    </div>

    <div class="col-sm-1">

    </div>



</div>



@section scripts{

    <script language="javascript">


        $(function () {
            $("#listview").ejListView({
                mouseDown: function(args) {
                    setEmailContent(window.dataSource.ViewModel.Messages[args.index]);
                }
            });



        });

        function onmousedown(args) {


            //alert(JSON.stringify(args.model.dataSource[args.index]));
            setEmailContent(args.model.dataSource[args.index]);
        }

        function newMail() {

            $("#rteSample").ejRTE({
                showToolbar: true,                
                allowEditing:true
            });


            setEmailContent({ Content: "<h3>type new question here</h3>" });
        }

        function setEmailContent(model) {

            $("#rteSample").ejRTE("setHtml", model.Content);
        }

        window.dataSource = @Html.Raw(JsonConvert.SerializeObject(Model));

    </script>

}

