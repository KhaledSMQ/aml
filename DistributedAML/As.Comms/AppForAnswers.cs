// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: AppForAnswers.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from AppForAnswers.proto</summary>
public static partial class AppForAnswersReflection {

  #region Descriptor
  /// <summary>File descriptor for AppForAnswers.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static AppForAnswersReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChNBcHBGb3JBbnN3ZXJzLnByb3RvIpQBChhBNEFBdXRoZW50aWNhdGlvbkFj",
          "Y291bnQSDQoFRW1haWwYASABKAkSDQoFQ29kZTEYAiABKAUSDQoFQ29kZTIY",
          "AyABKAUSDQoFQ29kZTMYBCABKAUSDQoFQ29kZTQYBSABKAUSHwoIVXNlclR5",
          "cGUYByABKA4yDS5BNEFQYXJ0eVR5cGUSDAoETmFtZRgJIAEoCSLfAQoKQTRB",
          "Q29tcGFueRITCgtDb21wYW55TmFtZRgBIAEoCRIQCghBZGRyZXNzMRgKIAEo",
          "CRIQCghBZGRyZXNzMhgLIAEoCRIPCgdDb3VudHJ5GAwgASgJEhAKCFBvc3Rj",
          "b2RlGA0gASgJEhEKCVRlbGVwaG9uZRgPIAEoCRIPCgdXZWJzaXRlGBAgASgJ",
          "EhIKCk1haW5Db2xvdXIYESABKAkSFwoPU2Vjb25kYXJ5Q29sb3VyGBIgASgJ",
          "EhYKDlRlcnRpYXJ5Q29sb3VyGBMgASgJEgwKBExvZ28YFCABKAkivAEKD0E0",
          "QUVtYWlsU2VydmljZRITCgtTZXJ2aWNlTmFtZRgBIAEoCRITCgtBcGlVc2Vy",
          "TmFtZRgCIAEoCRITCgtBcGlQYXNzd29yZBgDIAEoCRILCgNVcmkYBCABKAkS",
          "DgoGRG9tYWluGAUgASgJEhQKDGxhc3RQb2xsVGltZRgGIAEoAxIZChFkZWxh",
          "eU1pbGxpc2Vjb25kcxgHIAEoAxIcChRsb29rYmFja01pbGxpc2Vjb25kcxgI",
          "IAEoAyJbChBBNEFBZG1pbmlzdHJhdG9yEhkKEUFkbWluaXN0cmF0b3JOYW1l",
          "GAEgASgJEg0KBUVtYWlsGAIgASgJEh0KBUxldmVsGAMgASgOMg4uQTRBQWRt",
          "aW5MZXZlbCJKCgdBNEFVc2VyEhAKCFVzZXJOYW1lGAEgASgJEg0KBUVtYWls",
          "GAIgASgJEh4KBlN0YXR1cxgDIAEoDjIOLkE0QVVzZXJTdGF0dXMieAoJQTRB",
          "RXhwZXJ0EhIKCkV4cGVydE5hbWUYASABKAkSEQoJRmlyc3ROYW1lGAIgASgJ",
          "EhAKCExhc3ROYW1lGAMgASgJEg0KBUVtYWlsGAQgASgJEg4KBk1vYmlsZRgH",
          "IAEoCRITCgtDb21wYW55TmFtZRgIIAEoCSKIAQoPQTRBU3Vic2NyaXB0aW9u",
          "EhQKDFN1YnNjcmlwdGlvbhgBIAEoCRISCgpQcm9mZXNzaW9uGAIgASgJEhAK",
          "CENhdGVnb3J5GAMgASgJEhMKC1N1YkNhdGVnb3J5GAQgASgJEhAKCExvY2F0",
          "aW9uGAUgASgJEhIKCkV4cGVydE5hbWUYBiABKAkiIwoNQTRBUHJvZmVzc2lv",
          "bhISCgpQcm9mZXNzaW9uGAEgASgJIjMKC0E0QUNhdGVnb3J5EhAKCENhdGVn",
          "b3J5GAEgASgJEhIKClByb2Zlc3Npb24YAiABKAkiSwoOQTRBU3ViQ2F0ZWdv",
          "cnkSEwoLU3ViQ2F0ZWdvcnkYASABKAkSEAoIQ2F0ZWdvcnkYAiABKAkSEgoK",
          "UHJvZmVzc2lvbhgDIAEoCSJaCgtBNEFMb2NhdGlvbhIQCghMb2NhdGlvbhgB",
          "IAEoCRITCgtTdWJDYXRlZ29yeRgCIAEoCRIQCghDYXRlZ29yeRgDIAEoCRIS",
          "CgpQcm9mZXNzaW9uGAQgASgJIqQCCg5BNEFFbWFpbFJlY29yZBIVCg1FbWFp",
          "bFJlY29yZElkGAEgASgJEhEKCU1lc3NhZ2VJZBgCIAEoCRIRCglFbWFpbEZy",
          "b20YAyABKAkSEAoITmFtZUZyb20YBCABKAkSDwoHRW1haWxUbxgFIAEoCRIO",
          "CgZOYW1lVG8YBiABKAkSHgoWRW1haWxSZWNvcmRJZFJlbGF0ZWRUbxgHIAEo",
          "CRIcCgZTdGF0dXMYCCABKA4yDC5FbWFpbFN0YXR1cxIZChFFeHRlcm5hbE1l",
          "c3NhZ2VJZBgJIAEoCRIWCg5FeHRlcm5hbFN0YXR1cxgKIAEoCRITCgtVcGRh",
          "dGVkVGltZRgLIAEoCRILCgNVcmwYDCABKAkSDwoHU3ViamVjdBgNIAEoCSKZ",
          "AQoKQTRBTWVzc2FnZRIRCglNZXNzYWdlSWQYASABKAkSDwoHQ29udGVudBgC",
          "IAEoCRIkCgtDb250ZW50VHlwZRgDIAEoDjIPLkE0QUNvbnRlbnRUeXBlEhMK",
          "C0VtYWlsU2VuZGVyGAcgASgJEgwKBERhdGUYCCABKAkSDwoHU3ViamVjdBgJ",
          "IAEoCRINCgVUb3BpYxgKIAEoCSLUAQoOQWdncmVnYXRlUGFydHkSDQoFRW1h",
          "aWwYASABKAkSDAoETmFtZRgCIAEoCRIgCglQYXJ0eVR5cGUYAyABKA4yDS5B",
          "NEFQYXJ0eVR5cGUSHAoGZXhwZXJ0GAQgASgLMgouQTRBRXhwZXJ0SAASGAoE",
          "dXNlchgFIAEoCzIILkE0QVVzZXJIABIiCgVhZG1pbhgGIAEoCzIRLkE0QUFk",
          "bWluaXN0cmF0b3JIABIeCgdjb21wYW55GAcgASgLMgsuQTRBQ29tcGFueUgA",
          "QgcKBVBhcnR5IrEBChBBZ2dyZWdhdGVNZXNzYWdlEhAKCE5hbWVGcm9tGAEg",
          "ASgJEg4KBk5hbWVUbxgCIAEoCRIRCglFbWFpbEZyb20YAyABKAkSDwoHRW1h",
          "aWxUbxgEIAEoCRITCgtVcGRhdGVkVGltZRgFIAEoCRIPCgdTdWJqZWN0GAYg",
          "ASgJEhEKCU1lc3NhZ2VJZBgHIAEoCRIPCgdDb250ZW50GAggASgJEg0KBVRv",
          "cGljGAkgASgJIjgKEUFnZ3JlZ2F0ZU1lc3NhZ2VzEiMKCE1lc3NhZ2VzGAEg",
          "AygLMhEuQWdncmVnYXRlTWVzc2FnZSLvAQoLTWFpbGJveFZpZXcSDQoFQ291",
          "bnQYASABKAUSIAoHcmVxdWVzdBgCIAEoCzIPLk1haWxib3hSZXF1ZXN0EiYK",
          "BW15TWFwGAMgAygLMhcuTWFpbGJveFZpZXcuTXlNYXBFbnRyeRIjCghNZXNz",
          "YWdlcxgEIAMoCzIRLkFnZ3JlZ2F0ZU1lc3NhZ2USIAoHUGFydGllcxgFIAMo",
          "CzIPLkFnZ3JlZ2F0ZVBhcnR5GkAKCk15TWFwRW50cnkSCwoDa2V5GAEgASgJ",
          "EiEKBXZhbHVlGAIgASgLMhIuQWdncmVnYXRlTWVzc2FnZXM6AjgBIocBCg5N",
          "YWlsYm94UmVxdWVzdBINCgVTdGFydBgBIAEoBRIQCghQYWdlU2l6ZRgCIAEo",
          "BRINCgVPd25lchgDIAEoCRIfCghVc2VyVHlwZRgEIAEoDjINLkE0QVBhcnR5",
          "VHlwZRIkCgtNYWlsYm94VHlwZRgFIAEoDjIPLkE0QU1haWxib3hUeXBlKhsK",
          "DkE0QUNvbnRlbnRUeXBlEgkKBUVtYWlsEAAqPAoMQTRBUGFydHlUeXBlEgkK",
          "BUFkbWluEAASCAoEVXNlchABEgoKBkV4cGVydBACEgsKB0NvbXBhbnkQAypF",
          "Cg5BNEFNYWlsYm94VHlwZRIICgROb25lEAASCQoFSW5ib3gQARIICgRTZW50",
          "EAISCQoFVHJhc2gQAxIJCgVEcmFmdBAEKioKDUE0QVVzZXJTdGF0dXMSCgoG",
          "QWN0aXZlEAASDQoJU3VzcGVuZGVkEAEqMQoNQTRBQWRtaW5MZXZlbBIRCg1B",
          "ZG1pbmlzdHJhdG9yEAASDQoJTW9kZXJhdG9yEAEqNQoLRW1haWxTdGF0dXMS",
          "CwoHQ3JlYXRlZBAAEgwKCFNlbnRNYWlsEAESCwoHUmVwbGllZBACYgZwcm90",
          "bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::A4AContentType), typeof(global::A4APartyType), typeof(global::A4AMailboxType), typeof(global::A4AUserStatus), typeof(global::A4AAdminLevel), typeof(global::EmailStatus), }, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::A4AAuthenticationAccount), global::A4AAuthenticationAccount.Parser, new[]{ "Email", "Code1", "Code2", "Code3", "Code4", "UserType", "Name" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::A4ACompany), global::A4ACompany.Parser, new[]{ "CompanyName", "Address1", "Address2", "Country", "Postcode", "Telephone", "Website", "MainColour", "SecondaryColour", "TertiaryColour", "Logo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::A4AEmailService), global::A4AEmailService.Parser, new[]{ "ServiceName", "ApiUserName", "ApiPassword", "Uri", "Domain", "LastPollTime", "DelayMilliseconds", "LookbackMilliseconds" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::A4AAdministrator), global::A4AAdministrator.Parser, new[]{ "AdministratorName", "Email", "Level" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::A4AUser), global::A4AUser.Parser, new[]{ "UserName", "Email", "Status" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::A4AExpert), global::A4AExpert.Parser, new[]{ "ExpertName", "FirstName", "LastName", "Email", "Mobile", "CompanyName" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::A4ASubscription), global::A4ASubscription.Parser, new[]{ "Subscription", "Profession", "Category", "SubCategory", "Location", "ExpertName" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::A4AProfession), global::A4AProfession.Parser, new[]{ "Profession" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::A4ACategory), global::A4ACategory.Parser, new[]{ "Category", "Profession" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::A4ASubCategory), global::A4ASubCategory.Parser, new[]{ "SubCategory", "Category", "Profession" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::A4ALocation), global::A4ALocation.Parser, new[]{ "Location", "SubCategory", "Category", "Profession" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::A4AEmailRecord), global::A4AEmailRecord.Parser, new[]{ "EmailRecordId", "MessageId", "EmailFrom", "NameFrom", "EmailTo", "NameTo", "EmailRecordIdRelatedTo", "Status", "ExternalMessageId", "ExternalStatus", "UpdatedTime", "Url", "Subject" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::A4AMessage), global::A4AMessage.Parser, new[]{ "MessageId", "Content", "ContentType", "EmailSender", "Date", "Subject", "Topic" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AggregateParty), global::AggregateParty.Parser, new[]{ "Email", "Name", "PartyType", "Expert", "User", "Admin", "Company" }, new[]{ "Party" }, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AggregateMessage), global::AggregateMessage.Parser, new[]{ "NameFrom", "NameTo", "EmailFrom", "EmailTo", "UpdatedTime", "Subject", "MessageId", "Content", "Topic" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AggregateMessages), global::AggregateMessages.Parser, new[]{ "Messages" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MailboxView), global::MailboxView.Parser, new[]{ "Count", "Request", "MyMap", "Messages", "Parties" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::MailboxRequest), global::MailboxRequest.Parser, new[]{ "Start", "PageSize", "Owner", "UserType", "MailboxType" }, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum A4AContentType {
  [pbr::OriginalName("Email")] Email = 0,
}

public enum A4APartyType {
  [pbr::OriginalName("Admin")] Admin = 0,
  [pbr::OriginalName("User")] User = 1,
  [pbr::OriginalName("Expert")] Expert = 2,
  [pbr::OriginalName("Company")] Company = 3,
}

public enum A4AMailboxType {
  [pbr::OriginalName("None")] None = 0,
  [pbr::OriginalName("Inbox")] Inbox = 1,
  [pbr::OriginalName("Sent")] Sent = 2,
  [pbr::OriginalName("Trash")] Trash = 3,
  [pbr::OriginalName("Draft")] Draft = 4,
}

public enum A4AUserStatus {
  [pbr::OriginalName("Active")] Active = 0,
  [pbr::OriginalName("Suspended")] Suspended = 1,
}

public enum A4AAdminLevel {
  [pbr::OriginalName("Administrator")] Administrator = 0,
  [pbr::OriginalName("Moderator")] Moderator = 1,
}

public enum EmailStatus {
  [pbr::OriginalName("Created")] Created = 0,
  [pbr::OriginalName("SentMail")] SentMail = 1,
  [pbr::OriginalName("Replied")] Replied = 2,
}

#endregion

#region Messages
public sealed partial class A4AAuthenticationAccount : pb::IMessage<A4AAuthenticationAccount> {
  private static readonly pb::MessageParser<A4AAuthenticationAccount> _parser = new pb::MessageParser<A4AAuthenticationAccount>(() => new A4AAuthenticationAccount());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<A4AAuthenticationAccount> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AppForAnswersReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AAuthenticationAccount() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AAuthenticationAccount(A4AAuthenticationAccount other) : this() {
    email_ = other.email_;
    code1_ = other.code1_;
    code2_ = other.code2_;
    code3_ = other.code3_;
    code4_ = other.code4_;
    userType_ = other.userType_;
    name_ = other.name_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AAuthenticationAccount Clone() {
    return new A4AAuthenticationAccount(this);
  }

  /// <summary>Field number for the "Email" field.</summary>
  public const int EmailFieldNumber = 1;
  private string email_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Email {
    get { return email_; }
    set {
      email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Code1" field.</summary>
  public const int Code1FieldNumber = 2;
  private int code1_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Code1 {
    get { return code1_; }
    set {
      code1_ = value;
    }
  }

  /// <summary>Field number for the "Code2" field.</summary>
  public const int Code2FieldNumber = 3;
  private int code2_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Code2 {
    get { return code2_; }
    set {
      code2_ = value;
    }
  }

  /// <summary>Field number for the "Code3" field.</summary>
  public const int Code3FieldNumber = 4;
  private int code3_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Code3 {
    get { return code3_; }
    set {
      code3_ = value;
    }
  }

  /// <summary>Field number for the "Code4" field.</summary>
  public const int Code4FieldNumber = 5;
  private int code4_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Code4 {
    get { return code4_; }
    set {
      code4_ = value;
    }
  }

  /// <summary>Field number for the "UserType" field.</summary>
  public const int UserTypeFieldNumber = 7;
  private global::A4APartyType userType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A4APartyType UserType {
    get { return userType_; }
    set {
      userType_ = value;
    }
  }

  /// <summary>Field number for the "Name" field.</summary>
  public const int NameFieldNumber = 9;
  private string name_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Name {
    get { return name_; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as A4AAuthenticationAccount);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(A4AAuthenticationAccount other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Email != other.Email) return false;
    if (Code1 != other.Code1) return false;
    if (Code2 != other.Code2) return false;
    if (Code3 != other.Code3) return false;
    if (Code4 != other.Code4) return false;
    if (UserType != other.UserType) return false;
    if (Name != other.Name) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Email.Length != 0) hash ^= Email.GetHashCode();
    if (Code1 != 0) hash ^= Code1.GetHashCode();
    if (Code2 != 0) hash ^= Code2.GetHashCode();
    if (Code3 != 0) hash ^= Code3.GetHashCode();
    if (Code4 != 0) hash ^= Code4.GetHashCode();
    if (UserType != 0) hash ^= UserType.GetHashCode();
    if (Name.Length != 0) hash ^= Name.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Email.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Email);
    }
    if (Code1 != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Code1);
    }
    if (Code2 != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Code2);
    }
    if (Code3 != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Code3);
    }
    if (Code4 != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(Code4);
    }
    if (UserType != 0) {
      output.WriteRawTag(56);
      output.WriteEnum((int) UserType);
    }
    if (Name.Length != 0) {
      output.WriteRawTag(74);
      output.WriteString(Name);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Email.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
    }
    if (Code1 != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code1);
    }
    if (Code2 != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code2);
    }
    if (Code3 != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code3);
    }
    if (Code4 != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code4);
    }
    if (UserType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) UserType);
    }
    if (Name.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(A4AAuthenticationAccount other) {
    if (other == null) {
      return;
    }
    if (other.Email.Length != 0) {
      Email = other.Email;
    }
    if (other.Code1 != 0) {
      Code1 = other.Code1;
    }
    if (other.Code2 != 0) {
      Code2 = other.Code2;
    }
    if (other.Code3 != 0) {
      Code3 = other.Code3;
    }
    if (other.Code4 != 0) {
      Code4 = other.Code4;
    }
    if (other.UserType != 0) {
      UserType = other.UserType;
    }
    if (other.Name.Length != 0) {
      Name = other.Name;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Email = input.ReadString();
          break;
        }
        case 16: {
          Code1 = input.ReadInt32();
          break;
        }
        case 24: {
          Code2 = input.ReadInt32();
          break;
        }
        case 32: {
          Code3 = input.ReadInt32();
          break;
        }
        case 40: {
          Code4 = input.ReadInt32();
          break;
        }
        case 56: {
          userType_ = (global::A4APartyType) input.ReadEnum();
          break;
        }
        case 74: {
          Name = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class A4ACompany : pb::IMessage<A4ACompany> {
  private static readonly pb::MessageParser<A4ACompany> _parser = new pb::MessageParser<A4ACompany>(() => new A4ACompany());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<A4ACompany> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AppForAnswersReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4ACompany() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4ACompany(A4ACompany other) : this() {
    companyName_ = other.companyName_;
    address1_ = other.address1_;
    address2_ = other.address2_;
    country_ = other.country_;
    postcode_ = other.postcode_;
    telephone_ = other.telephone_;
    website_ = other.website_;
    mainColour_ = other.mainColour_;
    secondaryColour_ = other.secondaryColour_;
    tertiaryColour_ = other.tertiaryColour_;
    logo_ = other.logo_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4ACompany Clone() {
    return new A4ACompany(this);
  }

  /// <summary>Field number for the "CompanyName" field.</summary>
  public const int CompanyNameFieldNumber = 1;
  private string companyName_ = "";
  /// <summary>
  /// this is the party identifier
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CompanyName {
    get { return companyName_; }
    set {
      companyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Address1" field.</summary>
  public const int Address1FieldNumber = 10;
  private string address1_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Address1 {
    get { return address1_; }
    set {
      address1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Address2" field.</summary>
  public const int Address2FieldNumber = 11;
  private string address2_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Address2 {
    get { return address2_; }
    set {
      address2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Country" field.</summary>
  public const int CountryFieldNumber = 12;
  private string country_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Country {
    get { return country_; }
    set {
      country_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Postcode" field.</summary>
  public const int PostcodeFieldNumber = 13;
  private string postcode_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Postcode {
    get { return postcode_; }
    set {
      postcode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Telephone" field.</summary>
  public const int TelephoneFieldNumber = 15;
  private string telephone_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Telephone {
    get { return telephone_; }
    set {
      telephone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Website" field.</summary>
  public const int WebsiteFieldNumber = 16;
  private string website_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Website {
    get { return website_; }
    set {
      website_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "MainColour" field.</summary>
  public const int MainColourFieldNumber = 17;
  private string mainColour_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MainColour {
    get { return mainColour_; }
    set {
      mainColour_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "SecondaryColour" field.</summary>
  public const int SecondaryColourFieldNumber = 18;
  private string secondaryColour_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SecondaryColour {
    get { return secondaryColour_; }
    set {
      secondaryColour_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "TertiaryColour" field.</summary>
  public const int TertiaryColourFieldNumber = 19;
  private string tertiaryColour_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string TertiaryColour {
    get { return tertiaryColour_; }
    set {
      tertiaryColour_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Logo" field.</summary>
  public const int LogoFieldNumber = 20;
  private string logo_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Logo {
    get { return logo_; }
    set {
      logo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as A4ACompany);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(A4ACompany other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CompanyName != other.CompanyName) return false;
    if (Address1 != other.Address1) return false;
    if (Address2 != other.Address2) return false;
    if (Country != other.Country) return false;
    if (Postcode != other.Postcode) return false;
    if (Telephone != other.Telephone) return false;
    if (Website != other.Website) return false;
    if (MainColour != other.MainColour) return false;
    if (SecondaryColour != other.SecondaryColour) return false;
    if (TertiaryColour != other.TertiaryColour) return false;
    if (Logo != other.Logo) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CompanyName.Length != 0) hash ^= CompanyName.GetHashCode();
    if (Address1.Length != 0) hash ^= Address1.GetHashCode();
    if (Address2.Length != 0) hash ^= Address2.GetHashCode();
    if (Country.Length != 0) hash ^= Country.GetHashCode();
    if (Postcode.Length != 0) hash ^= Postcode.GetHashCode();
    if (Telephone.Length != 0) hash ^= Telephone.GetHashCode();
    if (Website.Length != 0) hash ^= Website.GetHashCode();
    if (MainColour.Length != 0) hash ^= MainColour.GetHashCode();
    if (SecondaryColour.Length != 0) hash ^= SecondaryColour.GetHashCode();
    if (TertiaryColour.Length != 0) hash ^= TertiaryColour.GetHashCode();
    if (Logo.Length != 0) hash ^= Logo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CompanyName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(CompanyName);
    }
    if (Address1.Length != 0) {
      output.WriteRawTag(82);
      output.WriteString(Address1);
    }
    if (Address2.Length != 0) {
      output.WriteRawTag(90);
      output.WriteString(Address2);
    }
    if (Country.Length != 0) {
      output.WriteRawTag(98);
      output.WriteString(Country);
    }
    if (Postcode.Length != 0) {
      output.WriteRawTag(106);
      output.WriteString(Postcode);
    }
    if (Telephone.Length != 0) {
      output.WriteRawTag(122);
      output.WriteString(Telephone);
    }
    if (Website.Length != 0) {
      output.WriteRawTag(130, 1);
      output.WriteString(Website);
    }
    if (MainColour.Length != 0) {
      output.WriteRawTag(138, 1);
      output.WriteString(MainColour);
    }
    if (SecondaryColour.Length != 0) {
      output.WriteRawTag(146, 1);
      output.WriteString(SecondaryColour);
    }
    if (TertiaryColour.Length != 0) {
      output.WriteRawTag(154, 1);
      output.WriteString(TertiaryColour);
    }
    if (Logo.Length != 0) {
      output.WriteRawTag(162, 1);
      output.WriteString(Logo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CompanyName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyName);
    }
    if (Address1.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Address1);
    }
    if (Address2.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Address2);
    }
    if (Country.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Country);
    }
    if (Postcode.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Postcode);
    }
    if (Telephone.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Telephone);
    }
    if (Website.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(Website);
    }
    if (MainColour.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(MainColour);
    }
    if (SecondaryColour.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(SecondaryColour);
    }
    if (TertiaryColour.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(TertiaryColour);
    }
    if (Logo.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(Logo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(A4ACompany other) {
    if (other == null) {
      return;
    }
    if (other.CompanyName.Length != 0) {
      CompanyName = other.CompanyName;
    }
    if (other.Address1.Length != 0) {
      Address1 = other.Address1;
    }
    if (other.Address2.Length != 0) {
      Address2 = other.Address2;
    }
    if (other.Country.Length != 0) {
      Country = other.Country;
    }
    if (other.Postcode.Length != 0) {
      Postcode = other.Postcode;
    }
    if (other.Telephone.Length != 0) {
      Telephone = other.Telephone;
    }
    if (other.Website.Length != 0) {
      Website = other.Website;
    }
    if (other.MainColour.Length != 0) {
      MainColour = other.MainColour;
    }
    if (other.SecondaryColour.Length != 0) {
      SecondaryColour = other.SecondaryColour;
    }
    if (other.TertiaryColour.Length != 0) {
      TertiaryColour = other.TertiaryColour;
    }
    if (other.Logo.Length != 0) {
      Logo = other.Logo;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          CompanyName = input.ReadString();
          break;
        }
        case 82: {
          Address1 = input.ReadString();
          break;
        }
        case 90: {
          Address2 = input.ReadString();
          break;
        }
        case 98: {
          Country = input.ReadString();
          break;
        }
        case 106: {
          Postcode = input.ReadString();
          break;
        }
        case 122: {
          Telephone = input.ReadString();
          break;
        }
        case 130: {
          Website = input.ReadString();
          break;
        }
        case 138: {
          MainColour = input.ReadString();
          break;
        }
        case 146: {
          SecondaryColour = input.ReadString();
          break;
        }
        case 154: {
          TertiaryColour = input.ReadString();
          break;
        }
        case 162: {
          Logo = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class A4AEmailService : pb::IMessage<A4AEmailService> {
  private static readonly pb::MessageParser<A4AEmailService> _parser = new pb::MessageParser<A4AEmailService>(() => new A4AEmailService());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<A4AEmailService> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AppForAnswersReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AEmailService() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AEmailService(A4AEmailService other) : this() {
    serviceName_ = other.serviceName_;
    apiUserName_ = other.apiUserName_;
    apiPassword_ = other.apiPassword_;
    uri_ = other.uri_;
    domain_ = other.domain_;
    lastPollTime_ = other.lastPollTime_;
    delayMilliseconds_ = other.delayMilliseconds_;
    lookbackMilliseconds_ = other.lookbackMilliseconds_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AEmailService Clone() {
    return new A4AEmailService(this);
  }

  /// <summary>Field number for the "ServiceName" field.</summary>
  public const int ServiceNameFieldNumber = 1;
  private string serviceName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ServiceName {
    get { return serviceName_; }
    set {
      serviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "ApiUserName" field.</summary>
  public const int ApiUserNameFieldNumber = 2;
  private string apiUserName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ApiUserName {
    get { return apiUserName_; }
    set {
      apiUserName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "ApiPassword" field.</summary>
  public const int ApiPasswordFieldNumber = 3;
  private string apiPassword_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ApiPassword {
    get { return apiPassword_; }
    set {
      apiPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Uri" field.</summary>
  public const int UriFieldNumber = 4;
  private string uri_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Uri {
    get { return uri_; }
    set {
      uri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Domain" field.</summary>
  public const int DomainFieldNumber = 5;
  private string domain_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Domain {
    get { return domain_; }
    set {
      domain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "lastPollTime" field.</summary>
  public const int LastPollTimeFieldNumber = 6;
  private long lastPollTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long LastPollTime {
    get { return lastPollTime_; }
    set {
      lastPollTime_ = value;
    }
  }

  /// <summary>Field number for the "delayMilliseconds" field.</summary>
  public const int DelayMillisecondsFieldNumber = 7;
  private long delayMilliseconds_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long DelayMilliseconds {
    get { return delayMilliseconds_; }
    set {
      delayMilliseconds_ = value;
    }
  }

  /// <summary>Field number for the "lookbackMilliseconds" field.</summary>
  public const int LookbackMillisecondsFieldNumber = 8;
  private long lookbackMilliseconds_;
  /// <summary>
  /// we look further back than our delay time
  /// in case we miss events need to discard repeated
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long LookbackMilliseconds {
    get { return lookbackMilliseconds_; }
    set {
      lookbackMilliseconds_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as A4AEmailService);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(A4AEmailService other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ServiceName != other.ServiceName) return false;
    if (ApiUserName != other.ApiUserName) return false;
    if (ApiPassword != other.ApiPassword) return false;
    if (Uri != other.Uri) return false;
    if (Domain != other.Domain) return false;
    if (LastPollTime != other.LastPollTime) return false;
    if (DelayMilliseconds != other.DelayMilliseconds) return false;
    if (LookbackMilliseconds != other.LookbackMilliseconds) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ServiceName.Length != 0) hash ^= ServiceName.GetHashCode();
    if (ApiUserName.Length != 0) hash ^= ApiUserName.GetHashCode();
    if (ApiPassword.Length != 0) hash ^= ApiPassword.GetHashCode();
    if (Uri.Length != 0) hash ^= Uri.GetHashCode();
    if (Domain.Length != 0) hash ^= Domain.GetHashCode();
    if (LastPollTime != 0L) hash ^= LastPollTime.GetHashCode();
    if (DelayMilliseconds != 0L) hash ^= DelayMilliseconds.GetHashCode();
    if (LookbackMilliseconds != 0L) hash ^= LookbackMilliseconds.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ServiceName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ServiceName);
    }
    if (ApiUserName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(ApiUserName);
    }
    if (ApiPassword.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(ApiPassword);
    }
    if (Uri.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Uri);
    }
    if (Domain.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(Domain);
    }
    if (LastPollTime != 0L) {
      output.WriteRawTag(48);
      output.WriteInt64(LastPollTime);
    }
    if (DelayMilliseconds != 0L) {
      output.WriteRawTag(56);
      output.WriteInt64(DelayMilliseconds);
    }
    if (LookbackMilliseconds != 0L) {
      output.WriteRawTag(64);
      output.WriteInt64(LookbackMilliseconds);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ServiceName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceName);
    }
    if (ApiUserName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ApiUserName);
    }
    if (ApiPassword.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ApiPassword);
    }
    if (Uri.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
    }
    if (Domain.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Domain);
    }
    if (LastPollTime != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastPollTime);
    }
    if (DelayMilliseconds != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(DelayMilliseconds);
    }
    if (LookbackMilliseconds != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(LookbackMilliseconds);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(A4AEmailService other) {
    if (other == null) {
      return;
    }
    if (other.ServiceName.Length != 0) {
      ServiceName = other.ServiceName;
    }
    if (other.ApiUserName.Length != 0) {
      ApiUserName = other.ApiUserName;
    }
    if (other.ApiPassword.Length != 0) {
      ApiPassword = other.ApiPassword;
    }
    if (other.Uri.Length != 0) {
      Uri = other.Uri;
    }
    if (other.Domain.Length != 0) {
      Domain = other.Domain;
    }
    if (other.LastPollTime != 0L) {
      LastPollTime = other.LastPollTime;
    }
    if (other.DelayMilliseconds != 0L) {
      DelayMilliseconds = other.DelayMilliseconds;
    }
    if (other.LookbackMilliseconds != 0L) {
      LookbackMilliseconds = other.LookbackMilliseconds;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ServiceName = input.ReadString();
          break;
        }
        case 18: {
          ApiUserName = input.ReadString();
          break;
        }
        case 26: {
          ApiPassword = input.ReadString();
          break;
        }
        case 34: {
          Uri = input.ReadString();
          break;
        }
        case 42: {
          Domain = input.ReadString();
          break;
        }
        case 48: {
          LastPollTime = input.ReadInt64();
          break;
        }
        case 56: {
          DelayMilliseconds = input.ReadInt64();
          break;
        }
        case 64: {
          LookbackMilliseconds = input.ReadInt64();
          break;
        }
      }
    }
  }

}

public sealed partial class A4AAdministrator : pb::IMessage<A4AAdministrator> {
  private static readonly pb::MessageParser<A4AAdministrator> _parser = new pb::MessageParser<A4AAdministrator>(() => new A4AAdministrator());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<A4AAdministrator> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AppForAnswersReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AAdministrator() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AAdministrator(A4AAdministrator other) : this() {
    administratorName_ = other.administratorName_;
    email_ = other.email_;
    level_ = other.level_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AAdministrator Clone() {
    return new A4AAdministrator(this);
  }

  /// <summary>Field number for the "AdministratorName" field.</summary>
  public const int AdministratorNameFieldNumber = 1;
  private string administratorName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AdministratorName {
    get { return administratorName_; }
    set {
      administratorName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Email" field.</summary>
  public const int EmailFieldNumber = 2;
  private string email_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Email {
    get { return email_; }
    set {
      email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Level" field.</summary>
  public const int LevelFieldNumber = 3;
  private global::A4AAdminLevel level_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A4AAdminLevel Level {
    get { return level_; }
    set {
      level_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as A4AAdministrator);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(A4AAdministrator other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AdministratorName != other.AdministratorName) return false;
    if (Email != other.Email) return false;
    if (Level != other.Level) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AdministratorName.Length != 0) hash ^= AdministratorName.GetHashCode();
    if (Email.Length != 0) hash ^= Email.GetHashCode();
    if (Level != 0) hash ^= Level.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AdministratorName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(AdministratorName);
    }
    if (Email.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Email);
    }
    if (Level != 0) {
      output.WriteRawTag(24);
      output.WriteEnum((int) Level);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AdministratorName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AdministratorName);
    }
    if (Email.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
    }
    if (Level != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Level);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(A4AAdministrator other) {
    if (other == null) {
      return;
    }
    if (other.AdministratorName.Length != 0) {
      AdministratorName = other.AdministratorName;
    }
    if (other.Email.Length != 0) {
      Email = other.Email;
    }
    if (other.Level != 0) {
      Level = other.Level;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          AdministratorName = input.ReadString();
          break;
        }
        case 18: {
          Email = input.ReadString();
          break;
        }
        case 24: {
          level_ = (global::A4AAdminLevel) input.ReadEnum();
          break;
        }
      }
    }
  }

}

public sealed partial class A4AUser : pb::IMessage<A4AUser> {
  private static readonly pb::MessageParser<A4AUser> _parser = new pb::MessageParser<A4AUser>(() => new A4AUser());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<A4AUser> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AppForAnswersReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AUser() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AUser(A4AUser other) : this() {
    userName_ = other.userName_;
    email_ = other.email_;
    status_ = other.status_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AUser Clone() {
    return new A4AUser(this);
  }

  /// <summary>Field number for the "UserName" field.</summary>
  public const int UserNameFieldNumber = 1;
  private string userName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserName {
    get { return userName_; }
    set {
      userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Email" field.</summary>
  public const int EmailFieldNumber = 2;
  private string email_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Email {
    get { return email_; }
    set {
      email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Status" field.</summary>
  public const int StatusFieldNumber = 3;
  private global::A4AUserStatus status_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A4AUserStatus Status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as A4AUser);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(A4AUser other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserName != other.UserName) return false;
    if (Email != other.Email) return false;
    if (Status != other.Status) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserName.Length != 0) hash ^= UserName.GetHashCode();
    if (Email.Length != 0) hash ^= Email.GetHashCode();
    if (Status != 0) hash ^= Status.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserName);
    }
    if (Email.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Email);
    }
    if (Status != 0) {
      output.WriteRawTag(24);
      output.WriteEnum((int) Status);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
    }
    if (Email.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
    }
    if (Status != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(A4AUser other) {
    if (other == null) {
      return;
    }
    if (other.UserName.Length != 0) {
      UserName = other.UserName;
    }
    if (other.Email.Length != 0) {
      Email = other.Email;
    }
    if (other.Status != 0) {
      Status = other.Status;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserName = input.ReadString();
          break;
        }
        case 18: {
          Email = input.ReadString();
          break;
        }
        case 24: {
          status_ = (global::A4AUserStatus) input.ReadEnum();
          break;
        }
      }
    }
  }

}

public sealed partial class A4AExpert : pb::IMessage<A4AExpert> {
  private static readonly pb::MessageParser<A4AExpert> _parser = new pb::MessageParser<A4AExpert>(() => new A4AExpert());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<A4AExpert> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AppForAnswersReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AExpert() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AExpert(A4AExpert other) : this() {
    expertName_ = other.expertName_;
    firstName_ = other.firstName_;
    lastName_ = other.lastName_;
    email_ = other.email_;
    mobile_ = other.mobile_;
    companyName_ = other.companyName_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AExpert Clone() {
    return new A4AExpert(this);
  }

  /// <summary>Field number for the "ExpertName" field.</summary>
  public const int ExpertNameFieldNumber = 1;
  private string expertName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ExpertName {
    get { return expertName_; }
    set {
      expertName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "FirstName" field.</summary>
  public const int FirstNameFieldNumber = 2;
  private string firstName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string FirstName {
    get { return firstName_; }
    set {
      firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "LastName" field.</summary>
  public const int LastNameFieldNumber = 3;
  private string lastName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string LastName {
    get { return lastName_; }
    set {
      lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Email" field.</summary>
  public const int EmailFieldNumber = 4;
  private string email_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Email {
    get { return email_; }
    set {
      email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Mobile" field.</summary>
  public const int MobileFieldNumber = 7;
  private string mobile_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Mobile {
    get { return mobile_; }
    set {
      mobile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "CompanyName" field.</summary>
  public const int CompanyNameFieldNumber = 8;
  private string companyName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CompanyName {
    get { return companyName_; }
    set {
      companyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as A4AExpert);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(A4AExpert other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ExpertName != other.ExpertName) return false;
    if (FirstName != other.FirstName) return false;
    if (LastName != other.LastName) return false;
    if (Email != other.Email) return false;
    if (Mobile != other.Mobile) return false;
    if (CompanyName != other.CompanyName) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ExpertName.Length != 0) hash ^= ExpertName.GetHashCode();
    if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
    if (LastName.Length != 0) hash ^= LastName.GetHashCode();
    if (Email.Length != 0) hash ^= Email.GetHashCode();
    if (Mobile.Length != 0) hash ^= Mobile.GetHashCode();
    if (CompanyName.Length != 0) hash ^= CompanyName.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ExpertName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ExpertName);
    }
    if (FirstName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(FirstName);
    }
    if (LastName.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(LastName);
    }
    if (Email.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Email);
    }
    if (Mobile.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(Mobile);
    }
    if (CompanyName.Length != 0) {
      output.WriteRawTag(66);
      output.WriteString(CompanyName);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ExpertName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ExpertName);
    }
    if (FirstName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
    }
    if (LastName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(LastName);
    }
    if (Email.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
    }
    if (Mobile.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Mobile);
    }
    if (CompanyName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyName);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(A4AExpert other) {
    if (other == null) {
      return;
    }
    if (other.ExpertName.Length != 0) {
      ExpertName = other.ExpertName;
    }
    if (other.FirstName.Length != 0) {
      FirstName = other.FirstName;
    }
    if (other.LastName.Length != 0) {
      LastName = other.LastName;
    }
    if (other.Email.Length != 0) {
      Email = other.Email;
    }
    if (other.Mobile.Length != 0) {
      Mobile = other.Mobile;
    }
    if (other.CompanyName.Length != 0) {
      CompanyName = other.CompanyName;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ExpertName = input.ReadString();
          break;
        }
        case 18: {
          FirstName = input.ReadString();
          break;
        }
        case 26: {
          LastName = input.ReadString();
          break;
        }
        case 34: {
          Email = input.ReadString();
          break;
        }
        case 58: {
          Mobile = input.ReadString();
          break;
        }
        case 66: {
          CompanyName = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class A4ASubscription : pb::IMessage<A4ASubscription> {
  private static readonly pb::MessageParser<A4ASubscription> _parser = new pb::MessageParser<A4ASubscription>(() => new A4ASubscription());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<A4ASubscription> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AppForAnswersReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4ASubscription() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4ASubscription(A4ASubscription other) : this() {
    subscription_ = other.subscription_;
    profession_ = other.profession_;
    category_ = other.category_;
    subCategory_ = other.subCategory_;
    location_ = other.location_;
    expertName_ = other.expertName_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4ASubscription Clone() {
    return new A4ASubscription(this);
  }

  /// <summary>Field number for the "Subscription" field.</summary>
  public const int SubscriptionFieldNumber = 1;
  private string subscription_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Subscription {
    get { return subscription_; }
    set {
      subscription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Profession" field.</summary>
  public const int ProfessionFieldNumber = 2;
  private string profession_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Profession {
    get { return profession_; }
    set {
      profession_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Category" field.</summary>
  public const int CategoryFieldNumber = 3;
  private string category_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Category {
    get { return category_; }
    set {
      category_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "SubCategory" field.</summary>
  public const int SubCategoryFieldNumber = 4;
  private string subCategory_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SubCategory {
    get { return subCategory_; }
    set {
      subCategory_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Location" field.</summary>
  public const int LocationFieldNumber = 5;
  private string location_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Location {
    get { return location_; }
    set {
      location_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "ExpertName" field.</summary>
  public const int ExpertNameFieldNumber = 6;
  private string expertName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ExpertName {
    get { return expertName_; }
    set {
      expertName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as A4ASubscription);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(A4ASubscription other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Subscription != other.Subscription) return false;
    if (Profession != other.Profession) return false;
    if (Category != other.Category) return false;
    if (SubCategory != other.SubCategory) return false;
    if (Location != other.Location) return false;
    if (ExpertName != other.ExpertName) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Subscription.Length != 0) hash ^= Subscription.GetHashCode();
    if (Profession.Length != 0) hash ^= Profession.GetHashCode();
    if (Category.Length != 0) hash ^= Category.GetHashCode();
    if (SubCategory.Length != 0) hash ^= SubCategory.GetHashCode();
    if (Location.Length != 0) hash ^= Location.GetHashCode();
    if (ExpertName.Length != 0) hash ^= ExpertName.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Subscription.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Subscription);
    }
    if (Profession.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Profession);
    }
    if (Category.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Category);
    }
    if (SubCategory.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(SubCategory);
    }
    if (Location.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(Location);
    }
    if (ExpertName.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(ExpertName);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Subscription.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Subscription);
    }
    if (Profession.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Profession);
    }
    if (Category.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Category);
    }
    if (SubCategory.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SubCategory);
    }
    if (Location.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Location);
    }
    if (ExpertName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ExpertName);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(A4ASubscription other) {
    if (other == null) {
      return;
    }
    if (other.Subscription.Length != 0) {
      Subscription = other.Subscription;
    }
    if (other.Profession.Length != 0) {
      Profession = other.Profession;
    }
    if (other.Category.Length != 0) {
      Category = other.Category;
    }
    if (other.SubCategory.Length != 0) {
      SubCategory = other.SubCategory;
    }
    if (other.Location.Length != 0) {
      Location = other.Location;
    }
    if (other.ExpertName.Length != 0) {
      ExpertName = other.ExpertName;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Subscription = input.ReadString();
          break;
        }
        case 18: {
          Profession = input.ReadString();
          break;
        }
        case 26: {
          Category = input.ReadString();
          break;
        }
        case 34: {
          SubCategory = input.ReadString();
          break;
        }
        case 42: {
          Location = input.ReadString();
          break;
        }
        case 50: {
          ExpertName = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class A4AProfession : pb::IMessage<A4AProfession> {
  private static readonly pb::MessageParser<A4AProfession> _parser = new pb::MessageParser<A4AProfession>(() => new A4AProfession());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<A4AProfession> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AppForAnswersReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AProfession() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AProfession(A4AProfession other) : this() {
    profession_ = other.profession_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AProfession Clone() {
    return new A4AProfession(this);
  }

  /// <summary>Field number for the "Profession" field.</summary>
  public const int ProfessionFieldNumber = 1;
  private string profession_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Profession {
    get { return profession_; }
    set {
      profession_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as A4AProfession);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(A4AProfession other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Profession != other.Profession) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Profession.Length != 0) hash ^= Profession.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Profession.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Profession);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Profession.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Profession);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(A4AProfession other) {
    if (other == null) {
      return;
    }
    if (other.Profession.Length != 0) {
      Profession = other.Profession;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Profession = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class A4ACategory : pb::IMessage<A4ACategory> {
  private static readonly pb::MessageParser<A4ACategory> _parser = new pb::MessageParser<A4ACategory>(() => new A4ACategory());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<A4ACategory> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AppForAnswersReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4ACategory() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4ACategory(A4ACategory other) : this() {
    category_ = other.category_;
    profession_ = other.profession_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4ACategory Clone() {
    return new A4ACategory(this);
  }

  /// <summary>Field number for the "Category" field.</summary>
  public const int CategoryFieldNumber = 1;
  private string category_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Category {
    get { return category_; }
    set {
      category_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Profession" field.</summary>
  public const int ProfessionFieldNumber = 2;
  private string profession_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Profession {
    get { return profession_; }
    set {
      profession_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as A4ACategory);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(A4ACategory other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Category != other.Category) return false;
    if (Profession != other.Profession) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Category.Length != 0) hash ^= Category.GetHashCode();
    if (Profession.Length != 0) hash ^= Profession.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Category.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Category);
    }
    if (Profession.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Profession);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Category.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Category);
    }
    if (Profession.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Profession);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(A4ACategory other) {
    if (other == null) {
      return;
    }
    if (other.Category.Length != 0) {
      Category = other.Category;
    }
    if (other.Profession.Length != 0) {
      Profession = other.Profession;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Category = input.ReadString();
          break;
        }
        case 18: {
          Profession = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class A4ASubCategory : pb::IMessage<A4ASubCategory> {
  private static readonly pb::MessageParser<A4ASubCategory> _parser = new pb::MessageParser<A4ASubCategory>(() => new A4ASubCategory());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<A4ASubCategory> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AppForAnswersReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4ASubCategory() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4ASubCategory(A4ASubCategory other) : this() {
    subCategory_ = other.subCategory_;
    category_ = other.category_;
    profession_ = other.profession_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4ASubCategory Clone() {
    return new A4ASubCategory(this);
  }

  /// <summary>Field number for the "SubCategory" field.</summary>
  public const int SubCategoryFieldNumber = 1;
  private string subCategory_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SubCategory {
    get { return subCategory_; }
    set {
      subCategory_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Category" field.</summary>
  public const int CategoryFieldNumber = 2;
  private string category_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Category {
    get { return category_; }
    set {
      category_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Profession" field.</summary>
  public const int ProfessionFieldNumber = 3;
  private string profession_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Profession {
    get { return profession_; }
    set {
      profession_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as A4ASubCategory);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(A4ASubCategory other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SubCategory != other.SubCategory) return false;
    if (Category != other.Category) return false;
    if (Profession != other.Profession) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SubCategory.Length != 0) hash ^= SubCategory.GetHashCode();
    if (Category.Length != 0) hash ^= Category.GetHashCode();
    if (Profession.Length != 0) hash ^= Profession.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SubCategory.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(SubCategory);
    }
    if (Category.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Category);
    }
    if (Profession.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Profession);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SubCategory.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SubCategory);
    }
    if (Category.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Category);
    }
    if (Profession.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Profession);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(A4ASubCategory other) {
    if (other == null) {
      return;
    }
    if (other.SubCategory.Length != 0) {
      SubCategory = other.SubCategory;
    }
    if (other.Category.Length != 0) {
      Category = other.Category;
    }
    if (other.Profession.Length != 0) {
      Profession = other.Profession;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          SubCategory = input.ReadString();
          break;
        }
        case 18: {
          Category = input.ReadString();
          break;
        }
        case 26: {
          Profession = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class A4ALocation : pb::IMessage<A4ALocation> {
  private static readonly pb::MessageParser<A4ALocation> _parser = new pb::MessageParser<A4ALocation>(() => new A4ALocation());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<A4ALocation> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AppForAnswersReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4ALocation() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4ALocation(A4ALocation other) : this() {
    location_ = other.location_;
    subCategory_ = other.subCategory_;
    category_ = other.category_;
    profession_ = other.profession_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4ALocation Clone() {
    return new A4ALocation(this);
  }

  /// <summary>Field number for the "Location" field.</summary>
  public const int LocationFieldNumber = 1;
  private string location_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Location {
    get { return location_; }
    set {
      location_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "SubCategory" field.</summary>
  public const int SubCategoryFieldNumber = 2;
  private string subCategory_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SubCategory {
    get { return subCategory_; }
    set {
      subCategory_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Category" field.</summary>
  public const int CategoryFieldNumber = 3;
  private string category_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Category {
    get { return category_; }
    set {
      category_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Profession" field.</summary>
  public const int ProfessionFieldNumber = 4;
  private string profession_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Profession {
    get { return profession_; }
    set {
      profession_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as A4ALocation);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(A4ALocation other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Location != other.Location) return false;
    if (SubCategory != other.SubCategory) return false;
    if (Category != other.Category) return false;
    if (Profession != other.Profession) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Location.Length != 0) hash ^= Location.GetHashCode();
    if (SubCategory.Length != 0) hash ^= SubCategory.GetHashCode();
    if (Category.Length != 0) hash ^= Category.GetHashCode();
    if (Profession.Length != 0) hash ^= Profession.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Location.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Location);
    }
    if (SubCategory.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(SubCategory);
    }
    if (Category.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Category);
    }
    if (Profession.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Profession);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Location.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Location);
    }
    if (SubCategory.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SubCategory);
    }
    if (Category.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Category);
    }
    if (Profession.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Profession);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(A4ALocation other) {
    if (other == null) {
      return;
    }
    if (other.Location.Length != 0) {
      Location = other.Location;
    }
    if (other.SubCategory.Length != 0) {
      SubCategory = other.SubCategory;
    }
    if (other.Category.Length != 0) {
      Category = other.Category;
    }
    if (other.Profession.Length != 0) {
      Profession = other.Profession;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Location = input.ReadString();
          break;
        }
        case 18: {
          SubCategory = input.ReadString();
          break;
        }
        case 26: {
          Category = input.ReadString();
          break;
        }
        case 34: {
          Profession = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class A4AEmailRecord : pb::IMessage<A4AEmailRecord> {
  private static readonly pb::MessageParser<A4AEmailRecord> _parser = new pb::MessageParser<A4AEmailRecord>(() => new A4AEmailRecord());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<A4AEmailRecord> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AppForAnswersReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AEmailRecord() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AEmailRecord(A4AEmailRecord other) : this() {
    emailRecordId_ = other.emailRecordId_;
    messageId_ = other.messageId_;
    emailFrom_ = other.emailFrom_;
    nameFrom_ = other.nameFrom_;
    emailTo_ = other.emailTo_;
    nameTo_ = other.nameTo_;
    emailRecordIdRelatedTo_ = other.emailRecordIdRelatedTo_;
    status_ = other.status_;
    externalMessageId_ = other.externalMessageId_;
    externalStatus_ = other.externalStatus_;
    updatedTime_ = other.updatedTime_;
    url_ = other.url_;
    subject_ = other.subject_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AEmailRecord Clone() {
    return new A4AEmailRecord(this);
  }

  /// <summary>Field number for the "EmailRecordId" field.</summary>
  public const int EmailRecordIdFieldNumber = 1;
  private string emailRecordId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string EmailRecordId {
    get { return emailRecordId_; }
    set {
      emailRecordId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "MessageId" field.</summary>
  public const int MessageIdFieldNumber = 2;
  private string messageId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MessageId {
    get { return messageId_; }
    set {
      messageId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "EmailFrom" field.</summary>
  public const int EmailFromFieldNumber = 3;
  private string emailFrom_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string EmailFrom {
    get { return emailFrom_; }
    set {
      emailFrom_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "NameFrom" field.</summary>
  public const int NameFromFieldNumber = 4;
  private string nameFrom_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string NameFrom {
    get { return nameFrom_; }
    set {
      nameFrom_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "EmailTo" field.</summary>
  public const int EmailToFieldNumber = 5;
  private string emailTo_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string EmailTo {
    get { return emailTo_; }
    set {
      emailTo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "NameTo" field.</summary>
  public const int NameToFieldNumber = 6;
  private string nameTo_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string NameTo {
    get { return nameTo_; }
    set {
      nameTo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "EmailRecordIdRelatedTo" field.</summary>
  public const int EmailRecordIdRelatedToFieldNumber = 7;
  private string emailRecordIdRelatedTo_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string EmailRecordIdRelatedTo {
    get { return emailRecordIdRelatedTo_; }
    set {
      emailRecordIdRelatedTo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Status" field.</summary>
  public const int StatusFieldNumber = 8;
  private global::EmailStatus status_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::EmailStatus Status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  /// <summary>Field number for the "ExternalMessageId" field.</summary>
  public const int ExternalMessageIdFieldNumber = 9;
  private string externalMessageId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ExternalMessageId {
    get { return externalMessageId_; }
    set {
      externalMessageId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "ExternalStatus" field.</summary>
  public const int ExternalStatusFieldNumber = 10;
  private string externalStatus_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ExternalStatus {
    get { return externalStatus_; }
    set {
      externalStatus_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "UpdatedTime" field.</summary>
  public const int UpdatedTimeFieldNumber = 11;
  private string updatedTime_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UpdatedTime {
    get { return updatedTime_; }
    set {
      updatedTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Url" field.</summary>
  public const int UrlFieldNumber = 12;
  private string url_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Url {
    get { return url_; }
    set {
      url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Subject" field.</summary>
  public const int SubjectFieldNumber = 13;
  private string subject_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Subject {
    get { return subject_; }
    set {
      subject_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as A4AEmailRecord);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(A4AEmailRecord other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (EmailRecordId != other.EmailRecordId) return false;
    if (MessageId != other.MessageId) return false;
    if (EmailFrom != other.EmailFrom) return false;
    if (NameFrom != other.NameFrom) return false;
    if (EmailTo != other.EmailTo) return false;
    if (NameTo != other.NameTo) return false;
    if (EmailRecordIdRelatedTo != other.EmailRecordIdRelatedTo) return false;
    if (Status != other.Status) return false;
    if (ExternalMessageId != other.ExternalMessageId) return false;
    if (ExternalStatus != other.ExternalStatus) return false;
    if (UpdatedTime != other.UpdatedTime) return false;
    if (Url != other.Url) return false;
    if (Subject != other.Subject) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (EmailRecordId.Length != 0) hash ^= EmailRecordId.GetHashCode();
    if (MessageId.Length != 0) hash ^= MessageId.GetHashCode();
    if (EmailFrom.Length != 0) hash ^= EmailFrom.GetHashCode();
    if (NameFrom.Length != 0) hash ^= NameFrom.GetHashCode();
    if (EmailTo.Length != 0) hash ^= EmailTo.GetHashCode();
    if (NameTo.Length != 0) hash ^= NameTo.GetHashCode();
    if (EmailRecordIdRelatedTo.Length != 0) hash ^= EmailRecordIdRelatedTo.GetHashCode();
    if (Status != 0) hash ^= Status.GetHashCode();
    if (ExternalMessageId.Length != 0) hash ^= ExternalMessageId.GetHashCode();
    if (ExternalStatus.Length != 0) hash ^= ExternalStatus.GetHashCode();
    if (UpdatedTime.Length != 0) hash ^= UpdatedTime.GetHashCode();
    if (Url.Length != 0) hash ^= Url.GetHashCode();
    if (Subject.Length != 0) hash ^= Subject.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (EmailRecordId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(EmailRecordId);
    }
    if (MessageId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(MessageId);
    }
    if (EmailFrom.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(EmailFrom);
    }
    if (NameFrom.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(NameFrom);
    }
    if (EmailTo.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(EmailTo);
    }
    if (NameTo.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(NameTo);
    }
    if (EmailRecordIdRelatedTo.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(EmailRecordIdRelatedTo);
    }
    if (Status != 0) {
      output.WriteRawTag(64);
      output.WriteEnum((int) Status);
    }
    if (ExternalMessageId.Length != 0) {
      output.WriteRawTag(74);
      output.WriteString(ExternalMessageId);
    }
    if (ExternalStatus.Length != 0) {
      output.WriteRawTag(82);
      output.WriteString(ExternalStatus);
    }
    if (UpdatedTime.Length != 0) {
      output.WriteRawTag(90);
      output.WriteString(UpdatedTime);
    }
    if (Url.Length != 0) {
      output.WriteRawTag(98);
      output.WriteString(Url);
    }
    if (Subject.Length != 0) {
      output.WriteRawTag(106);
      output.WriteString(Subject);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (EmailRecordId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(EmailRecordId);
    }
    if (MessageId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MessageId);
    }
    if (EmailFrom.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(EmailFrom);
    }
    if (NameFrom.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(NameFrom);
    }
    if (EmailTo.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(EmailTo);
    }
    if (NameTo.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(NameTo);
    }
    if (EmailRecordIdRelatedTo.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(EmailRecordIdRelatedTo);
    }
    if (Status != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
    }
    if (ExternalMessageId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ExternalMessageId);
    }
    if (ExternalStatus.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ExternalStatus);
    }
    if (UpdatedTime.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UpdatedTime);
    }
    if (Url.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
    }
    if (Subject.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Subject);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(A4AEmailRecord other) {
    if (other == null) {
      return;
    }
    if (other.EmailRecordId.Length != 0) {
      EmailRecordId = other.EmailRecordId;
    }
    if (other.MessageId.Length != 0) {
      MessageId = other.MessageId;
    }
    if (other.EmailFrom.Length != 0) {
      EmailFrom = other.EmailFrom;
    }
    if (other.NameFrom.Length != 0) {
      NameFrom = other.NameFrom;
    }
    if (other.EmailTo.Length != 0) {
      EmailTo = other.EmailTo;
    }
    if (other.NameTo.Length != 0) {
      NameTo = other.NameTo;
    }
    if (other.EmailRecordIdRelatedTo.Length != 0) {
      EmailRecordIdRelatedTo = other.EmailRecordIdRelatedTo;
    }
    if (other.Status != 0) {
      Status = other.Status;
    }
    if (other.ExternalMessageId.Length != 0) {
      ExternalMessageId = other.ExternalMessageId;
    }
    if (other.ExternalStatus.Length != 0) {
      ExternalStatus = other.ExternalStatus;
    }
    if (other.UpdatedTime.Length != 0) {
      UpdatedTime = other.UpdatedTime;
    }
    if (other.Url.Length != 0) {
      Url = other.Url;
    }
    if (other.Subject.Length != 0) {
      Subject = other.Subject;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          EmailRecordId = input.ReadString();
          break;
        }
        case 18: {
          MessageId = input.ReadString();
          break;
        }
        case 26: {
          EmailFrom = input.ReadString();
          break;
        }
        case 34: {
          NameFrom = input.ReadString();
          break;
        }
        case 42: {
          EmailTo = input.ReadString();
          break;
        }
        case 50: {
          NameTo = input.ReadString();
          break;
        }
        case 58: {
          EmailRecordIdRelatedTo = input.ReadString();
          break;
        }
        case 64: {
          status_ = (global::EmailStatus) input.ReadEnum();
          break;
        }
        case 74: {
          ExternalMessageId = input.ReadString();
          break;
        }
        case 82: {
          ExternalStatus = input.ReadString();
          break;
        }
        case 90: {
          UpdatedTime = input.ReadString();
          break;
        }
        case 98: {
          Url = input.ReadString();
          break;
        }
        case 106: {
          Subject = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class A4AMessage : pb::IMessage<A4AMessage> {
  private static readonly pb::MessageParser<A4AMessage> _parser = new pb::MessageParser<A4AMessage>(() => new A4AMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<A4AMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AppForAnswersReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AMessage(A4AMessage other) : this() {
    messageId_ = other.messageId_;
    content_ = other.content_;
    contentType_ = other.contentType_;
    emailSender_ = other.emailSender_;
    date_ = other.date_;
    subject_ = other.subject_;
    topic_ = other.topic_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AMessage Clone() {
    return new A4AMessage(this);
  }

  /// <summary>Field number for the "MessageId" field.</summary>
  public const int MessageIdFieldNumber = 1;
  private string messageId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MessageId {
    get { return messageId_; }
    set {
      messageId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Content" field.</summary>
  public const int ContentFieldNumber = 2;
  private string content_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Content {
    get { return content_; }
    set {
      content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "ContentType" field.</summary>
  public const int ContentTypeFieldNumber = 3;
  private global::A4AContentType contentType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A4AContentType ContentType {
    get { return contentType_; }
    set {
      contentType_ = value;
    }
  }

  /// <summary>Field number for the "EmailSender" field.</summary>
  public const int EmailSenderFieldNumber = 7;
  private string emailSender_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string EmailSender {
    get { return emailSender_; }
    set {
      emailSender_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Date" field.</summary>
  public const int DateFieldNumber = 8;
  private string date_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Date {
    get { return date_; }
    set {
      date_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Subject" field.</summary>
  public const int SubjectFieldNumber = 9;
  private string subject_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Subject {
    get { return subject_; }
    set {
      subject_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Topic" field.</summary>
  public const int TopicFieldNumber = 10;
  private string topic_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Topic {
    get { return topic_; }
    set {
      topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as A4AMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(A4AMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MessageId != other.MessageId) return false;
    if (Content != other.Content) return false;
    if (ContentType != other.ContentType) return false;
    if (EmailSender != other.EmailSender) return false;
    if (Date != other.Date) return false;
    if (Subject != other.Subject) return false;
    if (Topic != other.Topic) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MessageId.Length != 0) hash ^= MessageId.GetHashCode();
    if (Content.Length != 0) hash ^= Content.GetHashCode();
    if (ContentType != 0) hash ^= ContentType.GetHashCode();
    if (EmailSender.Length != 0) hash ^= EmailSender.GetHashCode();
    if (Date.Length != 0) hash ^= Date.GetHashCode();
    if (Subject.Length != 0) hash ^= Subject.GetHashCode();
    if (Topic.Length != 0) hash ^= Topic.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (MessageId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(MessageId);
    }
    if (Content.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Content);
    }
    if (ContentType != 0) {
      output.WriteRawTag(24);
      output.WriteEnum((int) ContentType);
    }
    if (EmailSender.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(EmailSender);
    }
    if (Date.Length != 0) {
      output.WriteRawTag(66);
      output.WriteString(Date);
    }
    if (Subject.Length != 0) {
      output.WriteRawTag(74);
      output.WriteString(Subject);
    }
    if (Topic.Length != 0) {
      output.WriteRawTag(82);
      output.WriteString(Topic);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MessageId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MessageId);
    }
    if (Content.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
    }
    if (ContentType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ContentType);
    }
    if (EmailSender.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(EmailSender);
    }
    if (Date.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Date);
    }
    if (Subject.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Subject);
    }
    if (Topic.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(A4AMessage other) {
    if (other == null) {
      return;
    }
    if (other.MessageId.Length != 0) {
      MessageId = other.MessageId;
    }
    if (other.Content.Length != 0) {
      Content = other.Content;
    }
    if (other.ContentType != 0) {
      ContentType = other.ContentType;
    }
    if (other.EmailSender.Length != 0) {
      EmailSender = other.EmailSender;
    }
    if (other.Date.Length != 0) {
      Date = other.Date;
    }
    if (other.Subject.Length != 0) {
      Subject = other.Subject;
    }
    if (other.Topic.Length != 0) {
      Topic = other.Topic;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          MessageId = input.ReadString();
          break;
        }
        case 18: {
          Content = input.ReadString();
          break;
        }
        case 24: {
          contentType_ = (global::A4AContentType) input.ReadEnum();
          break;
        }
        case 58: {
          EmailSender = input.ReadString();
          break;
        }
        case 66: {
          Date = input.ReadString();
          break;
        }
        case 74: {
          Subject = input.ReadString();
          break;
        }
        case 82: {
          Topic = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class AggregateParty : pb::IMessage<AggregateParty> {
  private static readonly pb::MessageParser<AggregateParty> _parser = new pb::MessageParser<AggregateParty>(() => new AggregateParty());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AggregateParty> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AppForAnswersReflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AggregateParty() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AggregateParty(AggregateParty other) : this() {
    email_ = other.email_;
    name_ = other.name_;
    partyType_ = other.partyType_;
    switch (other.PartyCase) {
      case PartyOneofCase.Expert:
        Expert = other.Expert.Clone();
        break;
      case PartyOneofCase.User:
        User = other.User.Clone();
        break;
      case PartyOneofCase.Admin:
        Admin = other.Admin.Clone();
        break;
      case PartyOneofCase.Company:
        Company = other.Company.Clone();
        break;
    }

    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AggregateParty Clone() {
    return new AggregateParty(this);
  }

  /// <summary>Field number for the "Email" field.</summary>
  public const int EmailFieldNumber = 1;
  private string email_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Email {
    get { return email_; }
    set {
      email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Name" field.</summary>
  public const int NameFieldNumber = 2;
  private string name_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Name {
    get { return name_; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "PartyType" field.</summary>
  public const int PartyTypeFieldNumber = 3;
  private global::A4APartyType partyType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A4APartyType PartyType {
    get { return partyType_; }
    set {
      partyType_ = value;
    }
  }

  /// <summary>Field number for the "expert" field.</summary>
  public const int ExpertFieldNumber = 4;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A4AExpert Expert {
    get { return partyCase_ == PartyOneofCase.Expert ? (global::A4AExpert) party_ : null; }
    set {
      party_ = value;
      partyCase_ = value == null ? PartyOneofCase.None : PartyOneofCase.Expert;
    }
  }

  /// <summary>Field number for the "user" field.</summary>
  public const int UserFieldNumber = 5;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A4AUser User {
    get { return partyCase_ == PartyOneofCase.User ? (global::A4AUser) party_ : null; }
    set {
      party_ = value;
      partyCase_ = value == null ? PartyOneofCase.None : PartyOneofCase.User;
    }
  }

  /// <summary>Field number for the "admin" field.</summary>
  public const int AdminFieldNumber = 6;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A4AAdministrator Admin {
    get { return partyCase_ == PartyOneofCase.Admin ? (global::A4AAdministrator) party_ : null; }
    set {
      party_ = value;
      partyCase_ = value == null ? PartyOneofCase.None : PartyOneofCase.Admin;
    }
  }

  /// <summary>Field number for the "company" field.</summary>
  public const int CompanyFieldNumber = 7;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A4ACompany Company {
    get { return partyCase_ == PartyOneofCase.Company ? (global::A4ACompany) party_ : null; }
    set {
      party_ = value;
      partyCase_ = value == null ? PartyOneofCase.None : PartyOneofCase.Company;
    }
  }

  private object party_;
  /// <summary>Enum of possible cases for the "Party" oneof.</summary>
  public enum PartyOneofCase {
    None = 0,
    Expert = 4,
    User = 5,
    Admin = 6,
    Company = 7,
  }
  private PartyOneofCase partyCase_ = PartyOneofCase.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PartyOneofCase PartyCase {
    get { return partyCase_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearParty() {
    partyCase_ = PartyOneofCase.None;
    party_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AggregateParty);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AggregateParty other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Email != other.Email) return false;
    if (Name != other.Name) return false;
    if (PartyType != other.PartyType) return false;
    if (!object.Equals(Expert, other.Expert)) return false;
    if (!object.Equals(User, other.User)) return false;
    if (!object.Equals(Admin, other.Admin)) return false;
    if (!object.Equals(Company, other.Company)) return false;
    if (PartyCase != other.PartyCase) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Email.Length != 0) hash ^= Email.GetHashCode();
    if (Name.Length != 0) hash ^= Name.GetHashCode();
    if (PartyType != 0) hash ^= PartyType.GetHashCode();
    if (partyCase_ == PartyOneofCase.Expert) hash ^= Expert.GetHashCode();
    if (partyCase_ == PartyOneofCase.User) hash ^= User.GetHashCode();
    if (partyCase_ == PartyOneofCase.Admin) hash ^= Admin.GetHashCode();
    if (partyCase_ == PartyOneofCase.Company) hash ^= Company.GetHashCode();
    hash ^= (int) partyCase_;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Email.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Email);
    }
    if (Name.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Name);
    }
    if (PartyType != 0) {
      output.WriteRawTag(24);
      output.WriteEnum((int) PartyType);
    }
    if (partyCase_ == PartyOneofCase.Expert) {
      output.WriteRawTag(34);
      output.WriteMessage(Expert);
    }
    if (partyCase_ == PartyOneofCase.User) {
      output.WriteRawTag(42);
      output.WriteMessage(User);
    }
    if (partyCase_ == PartyOneofCase.Admin) {
      output.WriteRawTag(50);
      output.WriteMessage(Admin);
    }
    if (partyCase_ == PartyOneofCase.Company) {
      output.WriteRawTag(58);
      output.WriteMessage(Company);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Email.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
    }
    if (Name.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (PartyType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PartyType);
    }
    if (partyCase_ == PartyOneofCase.Expert) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Expert);
    }
    if (partyCase_ == PartyOneofCase.User) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
    }
    if (partyCase_ == PartyOneofCase.Admin) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Admin);
    }
    if (partyCase_ == PartyOneofCase.Company) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Company);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AggregateParty other) {
    if (other == null) {
      return;
    }
    if (other.Email.Length != 0) {
      Email = other.Email;
    }
    if (other.Name.Length != 0) {
      Name = other.Name;
    }
    if (other.PartyType != 0) {
      PartyType = other.PartyType;
    }
    switch (other.PartyCase) {
      case PartyOneofCase.Expert:
        if (Expert == null) {
          Expert = new global::A4AExpert();
        }
        Expert.MergeFrom(other.Expert);
        break;
      case PartyOneofCase.User:
        if (User == null) {
          User = new global::A4AUser();
        }
        User.MergeFrom(other.User);
        break;
      case PartyOneofCase.Admin:
        if (Admin == null) {
          Admin = new global::A4AAdministrator();
        }
        Admin.MergeFrom(other.Admin);
        break;
      case PartyOneofCase.Company:
        if (Company == null) {
          Company = new global::A4ACompany();
        }
        Company.MergeFrom(other.Company);
        break;
    }

    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Email = input.ReadString();
          break;
        }
        case 18: {
          Name = input.ReadString();
          break;
        }
        case 24: {
          partyType_ = (global::A4APartyType) input.ReadEnum();
          break;
        }
        case 34: {
          global::A4AExpert subBuilder = new global::A4AExpert();
          if (partyCase_ == PartyOneofCase.Expert) {
            subBuilder.MergeFrom(Expert);
          }
          input.ReadMessage(subBuilder);
          Expert = subBuilder;
          break;
        }
        case 42: {
          global::A4AUser subBuilder = new global::A4AUser();
          if (partyCase_ == PartyOneofCase.User) {
            subBuilder.MergeFrom(User);
          }
          input.ReadMessage(subBuilder);
          User = subBuilder;
          break;
        }
        case 50: {
          global::A4AAdministrator subBuilder = new global::A4AAdministrator();
          if (partyCase_ == PartyOneofCase.Admin) {
            subBuilder.MergeFrom(Admin);
          }
          input.ReadMessage(subBuilder);
          Admin = subBuilder;
          break;
        }
        case 58: {
          global::A4ACompany subBuilder = new global::A4ACompany();
          if (partyCase_ == PartyOneofCase.Company) {
            subBuilder.MergeFrom(Company);
          }
          input.ReadMessage(subBuilder);
          Company = subBuilder;
          break;
        }
      }
    }
  }

}

public sealed partial class AggregateMessage : pb::IMessage<AggregateMessage> {
  private static readonly pb::MessageParser<AggregateMessage> _parser = new pb::MessageParser<AggregateMessage>(() => new AggregateMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AggregateMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AppForAnswersReflection.Descriptor.MessageTypes[14]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AggregateMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AggregateMessage(AggregateMessage other) : this() {
    nameFrom_ = other.nameFrom_;
    nameTo_ = other.nameTo_;
    emailFrom_ = other.emailFrom_;
    emailTo_ = other.emailTo_;
    updatedTime_ = other.updatedTime_;
    subject_ = other.subject_;
    messageId_ = other.messageId_;
    content_ = other.content_;
    topic_ = other.topic_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AggregateMessage Clone() {
    return new AggregateMessage(this);
  }

  /// <summary>Field number for the "NameFrom" field.</summary>
  public const int NameFromFieldNumber = 1;
  private string nameFrom_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string NameFrom {
    get { return nameFrom_; }
    set {
      nameFrom_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "NameTo" field.</summary>
  public const int NameToFieldNumber = 2;
  private string nameTo_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string NameTo {
    get { return nameTo_; }
    set {
      nameTo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "EmailFrom" field.</summary>
  public const int EmailFromFieldNumber = 3;
  private string emailFrom_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string EmailFrom {
    get { return emailFrom_; }
    set {
      emailFrom_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "EmailTo" field.</summary>
  public const int EmailToFieldNumber = 4;
  private string emailTo_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string EmailTo {
    get { return emailTo_; }
    set {
      emailTo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "UpdatedTime" field.</summary>
  public const int UpdatedTimeFieldNumber = 5;
  private string updatedTime_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UpdatedTime {
    get { return updatedTime_; }
    set {
      updatedTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Subject" field.</summary>
  public const int SubjectFieldNumber = 6;
  private string subject_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Subject {
    get { return subject_; }
    set {
      subject_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "MessageId" field.</summary>
  public const int MessageIdFieldNumber = 7;
  private string messageId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MessageId {
    get { return messageId_; }
    set {
      messageId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Content" field.</summary>
  public const int ContentFieldNumber = 8;
  private string content_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Content {
    get { return content_; }
    set {
      content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Topic" field.</summary>
  public const int TopicFieldNumber = 9;
  private string topic_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Topic {
    get { return topic_; }
    set {
      topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AggregateMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AggregateMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (NameFrom != other.NameFrom) return false;
    if (NameTo != other.NameTo) return false;
    if (EmailFrom != other.EmailFrom) return false;
    if (EmailTo != other.EmailTo) return false;
    if (UpdatedTime != other.UpdatedTime) return false;
    if (Subject != other.Subject) return false;
    if (MessageId != other.MessageId) return false;
    if (Content != other.Content) return false;
    if (Topic != other.Topic) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (NameFrom.Length != 0) hash ^= NameFrom.GetHashCode();
    if (NameTo.Length != 0) hash ^= NameTo.GetHashCode();
    if (EmailFrom.Length != 0) hash ^= EmailFrom.GetHashCode();
    if (EmailTo.Length != 0) hash ^= EmailTo.GetHashCode();
    if (UpdatedTime.Length != 0) hash ^= UpdatedTime.GetHashCode();
    if (Subject.Length != 0) hash ^= Subject.GetHashCode();
    if (MessageId.Length != 0) hash ^= MessageId.GetHashCode();
    if (Content.Length != 0) hash ^= Content.GetHashCode();
    if (Topic.Length != 0) hash ^= Topic.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (NameFrom.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(NameFrom);
    }
    if (NameTo.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(NameTo);
    }
    if (EmailFrom.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(EmailFrom);
    }
    if (EmailTo.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(EmailTo);
    }
    if (UpdatedTime.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(UpdatedTime);
    }
    if (Subject.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(Subject);
    }
    if (MessageId.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(MessageId);
    }
    if (Content.Length != 0) {
      output.WriteRawTag(66);
      output.WriteString(Content);
    }
    if (Topic.Length != 0) {
      output.WriteRawTag(74);
      output.WriteString(Topic);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (NameFrom.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(NameFrom);
    }
    if (NameTo.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(NameTo);
    }
    if (EmailFrom.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(EmailFrom);
    }
    if (EmailTo.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(EmailTo);
    }
    if (UpdatedTime.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UpdatedTime);
    }
    if (Subject.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Subject);
    }
    if (MessageId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MessageId);
    }
    if (Content.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
    }
    if (Topic.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AggregateMessage other) {
    if (other == null) {
      return;
    }
    if (other.NameFrom.Length != 0) {
      NameFrom = other.NameFrom;
    }
    if (other.NameTo.Length != 0) {
      NameTo = other.NameTo;
    }
    if (other.EmailFrom.Length != 0) {
      EmailFrom = other.EmailFrom;
    }
    if (other.EmailTo.Length != 0) {
      EmailTo = other.EmailTo;
    }
    if (other.UpdatedTime.Length != 0) {
      UpdatedTime = other.UpdatedTime;
    }
    if (other.Subject.Length != 0) {
      Subject = other.Subject;
    }
    if (other.MessageId.Length != 0) {
      MessageId = other.MessageId;
    }
    if (other.Content.Length != 0) {
      Content = other.Content;
    }
    if (other.Topic.Length != 0) {
      Topic = other.Topic;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          NameFrom = input.ReadString();
          break;
        }
        case 18: {
          NameTo = input.ReadString();
          break;
        }
        case 26: {
          EmailFrom = input.ReadString();
          break;
        }
        case 34: {
          EmailTo = input.ReadString();
          break;
        }
        case 42: {
          UpdatedTime = input.ReadString();
          break;
        }
        case 50: {
          Subject = input.ReadString();
          break;
        }
        case 58: {
          MessageId = input.ReadString();
          break;
        }
        case 66: {
          Content = input.ReadString();
          break;
        }
        case 74: {
          Topic = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class AggregateMessages : pb::IMessage<AggregateMessages> {
  private static readonly pb::MessageParser<AggregateMessages> _parser = new pb::MessageParser<AggregateMessages>(() => new AggregateMessages());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AggregateMessages> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AppForAnswersReflection.Descriptor.MessageTypes[15]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AggregateMessages() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AggregateMessages(AggregateMessages other) : this() {
    messages_ = other.messages_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AggregateMessages Clone() {
    return new AggregateMessages(this);
  }

  /// <summary>Field number for the "Messages" field.</summary>
  public const int MessagesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::AggregateMessage> _repeated_messages_codec
      = pb::FieldCodec.ForMessage(10, global::AggregateMessage.Parser);
  private readonly pbc::RepeatedField<global::AggregateMessage> messages_ = new pbc::RepeatedField<global::AggregateMessage>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::AggregateMessage> Messages {
    get { return messages_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AggregateMessages);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AggregateMessages other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!messages_.Equals(other.messages_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= messages_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    messages_.WriteTo(output, _repeated_messages_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += messages_.CalculateSize(_repeated_messages_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AggregateMessages other) {
    if (other == null) {
      return;
    }
    messages_.Add(other.messages_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          messages_.AddEntriesFrom(input, _repeated_messages_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class MailboxView : pb::IMessage<MailboxView> {
  private static readonly pb::MessageParser<MailboxView> _parser = new pb::MessageParser<MailboxView>(() => new MailboxView());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MailboxView> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AppForAnswersReflection.Descriptor.MessageTypes[16]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MailboxView() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MailboxView(MailboxView other) : this() {
    count_ = other.count_;
    Request = other.request_ != null ? other.Request.Clone() : null;
    myMap_ = other.myMap_.Clone();
    messages_ = other.messages_.Clone();
    parties_ = other.parties_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MailboxView Clone() {
    return new MailboxView(this);
  }

  /// <summary>Field number for the "Count" field.</summary>
  public const int CountFieldNumber = 1;
  private int count_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Count {
    get { return count_; }
    set {
      count_ = value;
    }
  }

  /// <summary>Field number for the "request" field.</summary>
  public const int RequestFieldNumber = 2;
  private global::MailboxRequest request_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MailboxRequest Request {
    get { return request_; }
    set {
      request_ = value;
    }
  }

  /// <summary>Field number for the "myMap" field.</summary>
  public const int MyMapFieldNumber = 3;
  private static readonly pbc::MapField<string, global::AggregateMessages>.Codec _map_myMap_codec
      = new pbc::MapField<string, global::AggregateMessages>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::AggregateMessages.Parser), 26);
  private readonly pbc::MapField<string, global::AggregateMessages> myMap_ = new pbc::MapField<string, global::AggregateMessages>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<string, global::AggregateMessages> MyMap {
    get { return myMap_; }
  }

  /// <summary>Field number for the "Messages" field.</summary>
  public const int MessagesFieldNumber = 4;
  private static readonly pb::FieldCodec<global::AggregateMessage> _repeated_messages_codec
      = pb::FieldCodec.ForMessage(34, global::AggregateMessage.Parser);
  private readonly pbc::RepeatedField<global::AggregateMessage> messages_ = new pbc::RepeatedField<global::AggregateMessage>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::AggregateMessage> Messages {
    get { return messages_; }
  }

  /// <summary>Field number for the "Parties" field.</summary>
  public const int PartiesFieldNumber = 5;
  private static readonly pb::FieldCodec<global::AggregateParty> _repeated_parties_codec
      = pb::FieldCodec.ForMessage(42, global::AggregateParty.Parser);
  private readonly pbc::RepeatedField<global::AggregateParty> parties_ = new pbc::RepeatedField<global::AggregateParty>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::AggregateParty> Parties {
    get { return parties_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MailboxView);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MailboxView other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Count != other.Count) return false;
    if (!object.Equals(Request, other.Request)) return false;
    if (!MyMap.Equals(other.MyMap)) return false;
    if(!messages_.Equals(other.messages_)) return false;
    if(!parties_.Equals(other.parties_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Count != 0) hash ^= Count.GetHashCode();
    if (request_ != null) hash ^= Request.GetHashCode();
    hash ^= MyMap.GetHashCode();
    hash ^= messages_.GetHashCode();
    hash ^= parties_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Count != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Count);
    }
    if (request_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Request);
    }
    myMap_.WriteTo(output, _map_myMap_codec);
    messages_.WriteTo(output, _repeated_messages_codec);
    parties_.WriteTo(output, _repeated_parties_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Count != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
    }
    if (request_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Request);
    }
    size += myMap_.CalculateSize(_map_myMap_codec);
    size += messages_.CalculateSize(_repeated_messages_codec);
    size += parties_.CalculateSize(_repeated_parties_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MailboxView other) {
    if (other == null) {
      return;
    }
    if (other.Count != 0) {
      Count = other.Count;
    }
    if (other.request_ != null) {
      if (request_ == null) {
        request_ = new global::MailboxRequest();
      }
      Request.MergeFrom(other.Request);
    }
    myMap_.Add(other.myMap_);
    messages_.Add(other.messages_);
    parties_.Add(other.parties_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Count = input.ReadInt32();
          break;
        }
        case 18: {
          if (request_ == null) {
            request_ = new global::MailboxRequest();
          }
          input.ReadMessage(request_);
          break;
        }
        case 26: {
          myMap_.AddEntriesFrom(input, _map_myMap_codec);
          break;
        }
        case 34: {
          messages_.AddEntriesFrom(input, _repeated_messages_codec);
          break;
        }
        case 42: {
          parties_.AddEntriesFrom(input, _repeated_parties_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class MailboxRequest : pb::IMessage<MailboxRequest> {
  private static readonly pb::MessageParser<MailboxRequest> _parser = new pb::MessageParser<MailboxRequest>(() => new MailboxRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MailboxRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AppForAnswersReflection.Descriptor.MessageTypes[17]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MailboxRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MailboxRequest(MailboxRequest other) : this() {
    start_ = other.start_;
    pageSize_ = other.pageSize_;
    owner_ = other.owner_;
    userType_ = other.userType_;
    mailboxType_ = other.mailboxType_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MailboxRequest Clone() {
    return new MailboxRequest(this);
  }

  /// <summary>Field number for the "Start" field.</summary>
  public const int StartFieldNumber = 1;
  private int start_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Start {
    get { return start_; }
    set {
      start_ = value;
    }
  }

  /// <summary>Field number for the "PageSize" field.</summary>
  public const int PageSizeFieldNumber = 2;
  private int pageSize_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PageSize {
    get { return pageSize_; }
    set {
      pageSize_ = value;
    }
  }

  /// <summary>Field number for the "Owner" field.</summary>
  public const int OwnerFieldNumber = 3;
  private string owner_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Owner {
    get { return owner_; }
    set {
      owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "UserType" field.</summary>
  public const int UserTypeFieldNumber = 4;
  private global::A4APartyType userType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A4APartyType UserType {
    get { return userType_; }
    set {
      userType_ = value;
    }
  }

  /// <summary>Field number for the "MailboxType" field.</summary>
  public const int MailboxTypeFieldNumber = 5;
  private global::A4AMailboxType mailboxType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A4AMailboxType MailboxType {
    get { return mailboxType_; }
    set {
      mailboxType_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MailboxRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MailboxRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Start != other.Start) return false;
    if (PageSize != other.PageSize) return false;
    if (Owner != other.Owner) return false;
    if (UserType != other.UserType) return false;
    if (MailboxType != other.MailboxType) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Start != 0) hash ^= Start.GetHashCode();
    if (PageSize != 0) hash ^= PageSize.GetHashCode();
    if (Owner.Length != 0) hash ^= Owner.GetHashCode();
    if (UserType != 0) hash ^= UserType.GetHashCode();
    if (MailboxType != 0) hash ^= MailboxType.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Start != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Start);
    }
    if (PageSize != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(PageSize);
    }
    if (Owner.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Owner);
    }
    if (UserType != 0) {
      output.WriteRawTag(32);
      output.WriteEnum((int) UserType);
    }
    if (MailboxType != 0) {
      output.WriteRawTag(40);
      output.WriteEnum((int) MailboxType);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Start != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Start);
    }
    if (PageSize != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
    }
    if (Owner.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
    }
    if (UserType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) UserType);
    }
    if (MailboxType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MailboxType);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MailboxRequest other) {
    if (other == null) {
      return;
    }
    if (other.Start != 0) {
      Start = other.Start;
    }
    if (other.PageSize != 0) {
      PageSize = other.PageSize;
    }
    if (other.Owner.Length != 0) {
      Owner = other.Owner;
    }
    if (other.UserType != 0) {
      UserType = other.UserType;
    }
    if (other.MailboxType != 0) {
      MailboxType = other.MailboxType;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Start = input.ReadInt32();
          break;
        }
        case 16: {
          PageSize = input.ReadInt32();
          break;
        }
        case 26: {
          Owner = input.ReadString();
          break;
        }
        case 32: {
          userType_ = (global::A4APartyType) input.ReadEnum();
          break;
        }
        case 40: {
          mailboxType_ = (global::A4AMailboxType) input.ReadEnum();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
