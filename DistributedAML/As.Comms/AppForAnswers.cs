// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AppForAnswers.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from AppForAnswers.proto</summary>
public static partial class AppForAnswersReflection {

  #region Descriptor
  /// <summary>File descriptor for AppForAnswers.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static AppForAnswersReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChNBcHBGb3JBbnN3ZXJzLnByb3RvIqYBChhBNEFBdXRoZW50aWNhdGlvbkFj",
          "Y291bnQSGwoTQXV0aGVudGljYXRpb25FbWFpbBgBIAEoCRINCgVDb2RlMRgC",
          "IAEoBRINCgVDb2RlMhgDIAEoBRINCgVDb2RlMxgEIAEoBRINCgVDb2RlNBgF",
          "IAEoBRIPCgdJc0FkbWluGAYgASgIEhAKCElzRXhwZXJ0GAcgASgIEg4KBklz",
          "VXNlchgIIAEoCCLuAQoKQTRBQ29tcGFueRITCgtDb21wYW55TmFtZRgBIAEo",
          "CRIQCghBZGRyZXNzMRgKIAEoCRIQCghBZGRyZXNzMhgLIAEoCRIPCgdDb3Vu",
          "dHJ5GAwgASgJEhAKCFBvc3Rjb2RlGA0gASgJEg0KBUVtYWlsGA4gASgJEhEK",
          "CVRlbGVwaG9uZRgPIAEoCRIPCgdXZWJzaXRlGBAgASgJEhIKCk1haW5Db2xv",
          "dXIYESABKAkSFwoPU2Vjb25kYXJ5Q29sb3VyGBIgASgJEhYKDlRlcnRpYXJ5",
          "Q29sb3VyGBMgASgJEgwKBExvZ28YFCABKAkiWwoQQTRBQWRtaW5pc3RyYXRv",
          "chIZChFBZG1pbmlzdHJhdG9yTmFtZRgBIAEoCRINCgVFbWFpbBgCIAEoCRId",
          "CgVMZXZlbBgDIAEoDjIOLkE0QUFkbWluTGV2ZWwiSgoHQTRBVXNlchIQCghV",
          "c2VyTmFtZRgBIAEoCRINCgVFbWFpbBgCIAEoCRIeCgZTdGF0dXMYAyABKA4y",
          "Di5BNEFVc2VyU3RhdHVzIpABCglBNEFFeHBlcnQSEgoKRXhwZXJ0TmFtZRgE",
          "IAEoCRIRCglGaXJzdE5hbWUYAiABKAkSEAoITGFzdE5hbWUYAyABKAkSEgoK",
          "QWxpYXNFbWFpbBgFIAEoCRIRCglSZWFsRW1haWwYBiABKAkSDgoGTW9iaWxl",
          "GAcgASgJEhMKC0NvbXBhbnlOYW1lGAggASgJInYKD0E0QVN1YnNjcmlwdGlv",
          "bhIUCgxTdWJzY3JpcHRpb24YASABKAkSEgoKUHJvZmVzc2lvbhgCIAEoCRIQ",
          "CghDYXRlZ29yeRgDIAEoCRITCgtTdWJDYXRlZ29yeRgEIAEoCRISCgpFeHBl",
          "cnROYW1lGAUgASgJIiMKDUE0QVByb2Zlc3Npb24SEgoKUHJvZmVzc2lvbhgB",
          "IAEoCSIzCgtBNEFDYXRlZ29yeRIQCghDYXRlZ29yeRgBIAEoCRISCgpQcm9m",
          "ZXNzaW9uGAIgASgJIksKDkE0QVN1YkNhdGVnb3J5EhMKC1N1YkNhdGVnb3J5",
          "GAEgASgJEhAKCENhdGVnb3J5GAIgASgJEhIKClByb2Zlc3Npb24YAyABKAki",
          "gAEKCkE0QU1lc3NhZ2USEQoJTWVzc2FnZUlkGAEgASgJEg8KB0NvbnRlbnQY",
          "AiABKAkSJAoLQ29udGVudFR5cGUYAyABKA4yDy5BNEFDb250ZW50VHlwZRIW",
          "Cg5BNEFTdWJDYXRlZ29yeRgEIAEoCRIQCghVc2VyTmFtZRgGIAEoCSobCg5B",
          "NEFDb250ZW50VHlwZRIJCgVFbWFpbBAAKioKDUE0QVVzZXJTdGF0dXMSCgoG",
          "QWN0aXZlEAASDQoJU3VzcGVuZGVkEAEqMQoNQTRBQWRtaW5MZXZlbBIRCg1B",
          "ZG1pbmlzdHJhdG9yEAASDQoJTW9kZXJhdG9yEAFiBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::A4AContentType), typeof(global::A4AUserStatus), typeof(global::A4AAdminLevel), }, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::A4AAuthenticationAccount), global::A4AAuthenticationAccount.Parser, new[]{ "AuthenticationEmail", "Code1", "Code2", "Code3", "Code4", "IsAdmin", "IsExpert", "IsUser" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::A4ACompany), global::A4ACompany.Parser, new[]{ "CompanyName", "Address1", "Address2", "Country", "Postcode", "Email", "Telephone", "Website", "MainColour", "SecondaryColour", "TertiaryColour", "Logo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::A4AAdministrator), global::A4AAdministrator.Parser, new[]{ "AdministratorName", "Email", "Level" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::A4AUser), global::A4AUser.Parser, new[]{ "UserName", "Email", "Status" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::A4AExpert), global::A4AExpert.Parser, new[]{ "ExpertName", "FirstName", "LastName", "AliasEmail", "RealEmail", "Mobile", "CompanyName" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::A4ASubscription), global::A4ASubscription.Parser, new[]{ "Subscription", "Profession", "Category", "SubCategory", "ExpertName" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::A4AProfession), global::A4AProfession.Parser, new[]{ "Profession" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::A4ACategory), global::A4ACategory.Parser, new[]{ "Category", "Profession" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::A4ASubCategory), global::A4ASubCategory.Parser, new[]{ "SubCategory", "Category", "Profession" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::A4AMessage), global::A4AMessage.Parser, new[]{ "MessageId", "Content", "ContentType", "A4ASubCategory", "UserName" }, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum A4AContentType {
  [pbr::OriginalName("Email")] Email = 0,
}

public enum A4AUserStatus {
  [pbr::OriginalName("Active")] Active = 0,
  [pbr::OriginalName("Suspended")] Suspended = 1,
}

public enum A4AAdminLevel {
  [pbr::OriginalName("Administrator")] Administrator = 0,
  [pbr::OriginalName("Moderator")] Moderator = 1,
}

#endregion

#region Messages
public sealed partial class A4AAuthenticationAccount : pb::IMessage<A4AAuthenticationAccount> {
  private static readonly pb::MessageParser<A4AAuthenticationAccount> _parser = new pb::MessageParser<A4AAuthenticationAccount>(() => new A4AAuthenticationAccount());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<A4AAuthenticationAccount> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AppForAnswersReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AAuthenticationAccount() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AAuthenticationAccount(A4AAuthenticationAccount other) : this() {
    authenticationEmail_ = other.authenticationEmail_;
    code1_ = other.code1_;
    code2_ = other.code2_;
    code3_ = other.code3_;
    code4_ = other.code4_;
    isAdmin_ = other.isAdmin_;
    isExpert_ = other.isExpert_;
    isUser_ = other.isUser_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AAuthenticationAccount Clone() {
    return new A4AAuthenticationAccount(this);
  }

  /// <summary>Field number for the "AuthenticationEmail" field.</summary>
  public const int AuthenticationEmailFieldNumber = 1;
  private string authenticationEmail_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AuthenticationEmail {
    get { return authenticationEmail_; }
    set {
      authenticationEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Code1" field.</summary>
  public const int Code1FieldNumber = 2;
  private int code1_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Code1 {
    get { return code1_; }
    set {
      code1_ = value;
    }
  }

  /// <summary>Field number for the "Code2" field.</summary>
  public const int Code2FieldNumber = 3;
  private int code2_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Code2 {
    get { return code2_; }
    set {
      code2_ = value;
    }
  }

  /// <summary>Field number for the "Code3" field.</summary>
  public const int Code3FieldNumber = 4;
  private int code3_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Code3 {
    get { return code3_; }
    set {
      code3_ = value;
    }
  }

  /// <summary>Field number for the "Code4" field.</summary>
  public const int Code4FieldNumber = 5;
  private int code4_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Code4 {
    get { return code4_; }
    set {
      code4_ = value;
    }
  }

  /// <summary>Field number for the "IsAdmin" field.</summary>
  public const int IsAdminFieldNumber = 6;
  private bool isAdmin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsAdmin {
    get { return isAdmin_; }
    set {
      isAdmin_ = value;
    }
  }

  /// <summary>Field number for the "IsExpert" field.</summary>
  public const int IsExpertFieldNumber = 7;
  private bool isExpert_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsExpert {
    get { return isExpert_; }
    set {
      isExpert_ = value;
    }
  }

  /// <summary>Field number for the "IsUser" field.</summary>
  public const int IsUserFieldNumber = 8;
  private bool isUser_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsUser {
    get { return isUser_; }
    set {
      isUser_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as A4AAuthenticationAccount);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(A4AAuthenticationAccount other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AuthenticationEmail != other.AuthenticationEmail) return false;
    if (Code1 != other.Code1) return false;
    if (Code2 != other.Code2) return false;
    if (Code3 != other.Code3) return false;
    if (Code4 != other.Code4) return false;
    if (IsAdmin != other.IsAdmin) return false;
    if (IsExpert != other.IsExpert) return false;
    if (IsUser != other.IsUser) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AuthenticationEmail.Length != 0) hash ^= AuthenticationEmail.GetHashCode();
    if (Code1 != 0) hash ^= Code1.GetHashCode();
    if (Code2 != 0) hash ^= Code2.GetHashCode();
    if (Code3 != 0) hash ^= Code3.GetHashCode();
    if (Code4 != 0) hash ^= Code4.GetHashCode();
    if (IsAdmin != false) hash ^= IsAdmin.GetHashCode();
    if (IsExpert != false) hash ^= IsExpert.GetHashCode();
    if (IsUser != false) hash ^= IsUser.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AuthenticationEmail.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(AuthenticationEmail);
    }
    if (Code1 != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Code1);
    }
    if (Code2 != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Code2);
    }
    if (Code3 != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Code3);
    }
    if (Code4 != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(Code4);
    }
    if (IsAdmin != false) {
      output.WriteRawTag(48);
      output.WriteBool(IsAdmin);
    }
    if (IsExpert != false) {
      output.WriteRawTag(56);
      output.WriteBool(IsExpert);
    }
    if (IsUser != false) {
      output.WriteRawTag(64);
      output.WriteBool(IsUser);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AuthenticationEmail.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthenticationEmail);
    }
    if (Code1 != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code1);
    }
    if (Code2 != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code2);
    }
    if (Code3 != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code3);
    }
    if (Code4 != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code4);
    }
    if (IsAdmin != false) {
      size += 1 + 1;
    }
    if (IsExpert != false) {
      size += 1 + 1;
    }
    if (IsUser != false) {
      size += 1 + 1;
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(A4AAuthenticationAccount other) {
    if (other == null) {
      return;
    }
    if (other.AuthenticationEmail.Length != 0) {
      AuthenticationEmail = other.AuthenticationEmail;
    }
    if (other.Code1 != 0) {
      Code1 = other.Code1;
    }
    if (other.Code2 != 0) {
      Code2 = other.Code2;
    }
    if (other.Code3 != 0) {
      Code3 = other.Code3;
    }
    if (other.Code4 != 0) {
      Code4 = other.Code4;
    }
    if (other.IsAdmin != false) {
      IsAdmin = other.IsAdmin;
    }
    if (other.IsExpert != false) {
      IsExpert = other.IsExpert;
    }
    if (other.IsUser != false) {
      IsUser = other.IsUser;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          AuthenticationEmail = input.ReadString();
          break;
        }
        case 16: {
          Code1 = input.ReadInt32();
          break;
        }
        case 24: {
          Code2 = input.ReadInt32();
          break;
        }
        case 32: {
          Code3 = input.ReadInt32();
          break;
        }
        case 40: {
          Code4 = input.ReadInt32();
          break;
        }
        case 48: {
          IsAdmin = input.ReadBool();
          break;
        }
        case 56: {
          IsExpert = input.ReadBool();
          break;
        }
        case 64: {
          IsUser = input.ReadBool();
          break;
        }
      }
    }
  }

}

public sealed partial class A4ACompany : pb::IMessage<A4ACompany> {
  private static readonly pb::MessageParser<A4ACompany> _parser = new pb::MessageParser<A4ACompany>(() => new A4ACompany());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<A4ACompany> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AppForAnswersReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4ACompany() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4ACompany(A4ACompany other) : this() {
    companyName_ = other.companyName_;
    address1_ = other.address1_;
    address2_ = other.address2_;
    country_ = other.country_;
    postcode_ = other.postcode_;
    email_ = other.email_;
    telephone_ = other.telephone_;
    website_ = other.website_;
    mainColour_ = other.mainColour_;
    secondaryColour_ = other.secondaryColour_;
    tertiaryColour_ = other.tertiaryColour_;
    logo_ = other.logo_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4ACompany Clone() {
    return new A4ACompany(this);
  }

  /// <summary>Field number for the "CompanyName" field.</summary>
  public const int CompanyNameFieldNumber = 1;
  private string companyName_ = "";
  /// <summary>
  /// this is the party identifier
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CompanyName {
    get { return companyName_; }
    set {
      companyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Address1" field.</summary>
  public const int Address1FieldNumber = 10;
  private string address1_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Address1 {
    get { return address1_; }
    set {
      address1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Address2" field.</summary>
  public const int Address2FieldNumber = 11;
  private string address2_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Address2 {
    get { return address2_; }
    set {
      address2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Country" field.</summary>
  public const int CountryFieldNumber = 12;
  private string country_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Country {
    get { return country_; }
    set {
      country_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Postcode" field.</summary>
  public const int PostcodeFieldNumber = 13;
  private string postcode_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Postcode {
    get { return postcode_; }
    set {
      postcode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Email" field.</summary>
  public const int EmailFieldNumber = 14;
  private string email_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Email {
    get { return email_; }
    set {
      email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Telephone" field.</summary>
  public const int TelephoneFieldNumber = 15;
  private string telephone_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Telephone {
    get { return telephone_; }
    set {
      telephone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Website" field.</summary>
  public const int WebsiteFieldNumber = 16;
  private string website_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Website {
    get { return website_; }
    set {
      website_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "MainColour" field.</summary>
  public const int MainColourFieldNumber = 17;
  private string mainColour_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MainColour {
    get { return mainColour_; }
    set {
      mainColour_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "SecondaryColour" field.</summary>
  public const int SecondaryColourFieldNumber = 18;
  private string secondaryColour_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SecondaryColour {
    get { return secondaryColour_; }
    set {
      secondaryColour_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "TertiaryColour" field.</summary>
  public const int TertiaryColourFieldNumber = 19;
  private string tertiaryColour_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string TertiaryColour {
    get { return tertiaryColour_; }
    set {
      tertiaryColour_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Logo" field.</summary>
  public const int LogoFieldNumber = 20;
  private string logo_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Logo {
    get { return logo_; }
    set {
      logo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as A4ACompany);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(A4ACompany other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CompanyName != other.CompanyName) return false;
    if (Address1 != other.Address1) return false;
    if (Address2 != other.Address2) return false;
    if (Country != other.Country) return false;
    if (Postcode != other.Postcode) return false;
    if (Email != other.Email) return false;
    if (Telephone != other.Telephone) return false;
    if (Website != other.Website) return false;
    if (MainColour != other.MainColour) return false;
    if (SecondaryColour != other.SecondaryColour) return false;
    if (TertiaryColour != other.TertiaryColour) return false;
    if (Logo != other.Logo) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CompanyName.Length != 0) hash ^= CompanyName.GetHashCode();
    if (Address1.Length != 0) hash ^= Address1.GetHashCode();
    if (Address2.Length != 0) hash ^= Address2.GetHashCode();
    if (Country.Length != 0) hash ^= Country.GetHashCode();
    if (Postcode.Length != 0) hash ^= Postcode.GetHashCode();
    if (Email.Length != 0) hash ^= Email.GetHashCode();
    if (Telephone.Length != 0) hash ^= Telephone.GetHashCode();
    if (Website.Length != 0) hash ^= Website.GetHashCode();
    if (MainColour.Length != 0) hash ^= MainColour.GetHashCode();
    if (SecondaryColour.Length != 0) hash ^= SecondaryColour.GetHashCode();
    if (TertiaryColour.Length != 0) hash ^= TertiaryColour.GetHashCode();
    if (Logo.Length != 0) hash ^= Logo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CompanyName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(CompanyName);
    }
    if (Address1.Length != 0) {
      output.WriteRawTag(82);
      output.WriteString(Address1);
    }
    if (Address2.Length != 0) {
      output.WriteRawTag(90);
      output.WriteString(Address2);
    }
    if (Country.Length != 0) {
      output.WriteRawTag(98);
      output.WriteString(Country);
    }
    if (Postcode.Length != 0) {
      output.WriteRawTag(106);
      output.WriteString(Postcode);
    }
    if (Email.Length != 0) {
      output.WriteRawTag(114);
      output.WriteString(Email);
    }
    if (Telephone.Length != 0) {
      output.WriteRawTag(122);
      output.WriteString(Telephone);
    }
    if (Website.Length != 0) {
      output.WriteRawTag(130, 1);
      output.WriteString(Website);
    }
    if (MainColour.Length != 0) {
      output.WriteRawTag(138, 1);
      output.WriteString(MainColour);
    }
    if (SecondaryColour.Length != 0) {
      output.WriteRawTag(146, 1);
      output.WriteString(SecondaryColour);
    }
    if (TertiaryColour.Length != 0) {
      output.WriteRawTag(154, 1);
      output.WriteString(TertiaryColour);
    }
    if (Logo.Length != 0) {
      output.WriteRawTag(162, 1);
      output.WriteString(Logo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CompanyName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyName);
    }
    if (Address1.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Address1);
    }
    if (Address2.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Address2);
    }
    if (Country.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Country);
    }
    if (Postcode.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Postcode);
    }
    if (Email.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
    }
    if (Telephone.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Telephone);
    }
    if (Website.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(Website);
    }
    if (MainColour.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(MainColour);
    }
    if (SecondaryColour.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(SecondaryColour);
    }
    if (TertiaryColour.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(TertiaryColour);
    }
    if (Logo.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(Logo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(A4ACompany other) {
    if (other == null) {
      return;
    }
    if (other.CompanyName.Length != 0) {
      CompanyName = other.CompanyName;
    }
    if (other.Address1.Length != 0) {
      Address1 = other.Address1;
    }
    if (other.Address2.Length != 0) {
      Address2 = other.Address2;
    }
    if (other.Country.Length != 0) {
      Country = other.Country;
    }
    if (other.Postcode.Length != 0) {
      Postcode = other.Postcode;
    }
    if (other.Email.Length != 0) {
      Email = other.Email;
    }
    if (other.Telephone.Length != 0) {
      Telephone = other.Telephone;
    }
    if (other.Website.Length != 0) {
      Website = other.Website;
    }
    if (other.MainColour.Length != 0) {
      MainColour = other.MainColour;
    }
    if (other.SecondaryColour.Length != 0) {
      SecondaryColour = other.SecondaryColour;
    }
    if (other.TertiaryColour.Length != 0) {
      TertiaryColour = other.TertiaryColour;
    }
    if (other.Logo.Length != 0) {
      Logo = other.Logo;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          CompanyName = input.ReadString();
          break;
        }
        case 82: {
          Address1 = input.ReadString();
          break;
        }
        case 90: {
          Address2 = input.ReadString();
          break;
        }
        case 98: {
          Country = input.ReadString();
          break;
        }
        case 106: {
          Postcode = input.ReadString();
          break;
        }
        case 114: {
          Email = input.ReadString();
          break;
        }
        case 122: {
          Telephone = input.ReadString();
          break;
        }
        case 130: {
          Website = input.ReadString();
          break;
        }
        case 138: {
          MainColour = input.ReadString();
          break;
        }
        case 146: {
          SecondaryColour = input.ReadString();
          break;
        }
        case 154: {
          TertiaryColour = input.ReadString();
          break;
        }
        case 162: {
          Logo = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class A4AAdministrator : pb::IMessage<A4AAdministrator> {
  private static readonly pb::MessageParser<A4AAdministrator> _parser = new pb::MessageParser<A4AAdministrator>(() => new A4AAdministrator());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<A4AAdministrator> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AppForAnswersReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AAdministrator() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AAdministrator(A4AAdministrator other) : this() {
    administratorName_ = other.administratorName_;
    email_ = other.email_;
    level_ = other.level_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AAdministrator Clone() {
    return new A4AAdministrator(this);
  }

  /// <summary>Field number for the "AdministratorName" field.</summary>
  public const int AdministratorNameFieldNumber = 1;
  private string administratorName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AdministratorName {
    get { return administratorName_; }
    set {
      administratorName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Email" field.</summary>
  public const int EmailFieldNumber = 2;
  private string email_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Email {
    get { return email_; }
    set {
      email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Level" field.</summary>
  public const int LevelFieldNumber = 3;
  private global::A4AAdminLevel level_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A4AAdminLevel Level {
    get { return level_; }
    set {
      level_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as A4AAdministrator);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(A4AAdministrator other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AdministratorName != other.AdministratorName) return false;
    if (Email != other.Email) return false;
    if (Level != other.Level) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AdministratorName.Length != 0) hash ^= AdministratorName.GetHashCode();
    if (Email.Length != 0) hash ^= Email.GetHashCode();
    if (Level != 0) hash ^= Level.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AdministratorName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(AdministratorName);
    }
    if (Email.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Email);
    }
    if (Level != 0) {
      output.WriteRawTag(24);
      output.WriteEnum((int) Level);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AdministratorName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AdministratorName);
    }
    if (Email.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
    }
    if (Level != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Level);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(A4AAdministrator other) {
    if (other == null) {
      return;
    }
    if (other.AdministratorName.Length != 0) {
      AdministratorName = other.AdministratorName;
    }
    if (other.Email.Length != 0) {
      Email = other.Email;
    }
    if (other.Level != 0) {
      Level = other.Level;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          AdministratorName = input.ReadString();
          break;
        }
        case 18: {
          Email = input.ReadString();
          break;
        }
        case 24: {
          level_ = (global::A4AAdminLevel) input.ReadEnum();
          break;
        }
      }
    }
  }

}

public sealed partial class A4AUser : pb::IMessage<A4AUser> {
  private static readonly pb::MessageParser<A4AUser> _parser = new pb::MessageParser<A4AUser>(() => new A4AUser());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<A4AUser> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AppForAnswersReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AUser() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AUser(A4AUser other) : this() {
    userName_ = other.userName_;
    email_ = other.email_;
    status_ = other.status_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AUser Clone() {
    return new A4AUser(this);
  }

  /// <summary>Field number for the "UserName" field.</summary>
  public const int UserNameFieldNumber = 1;
  private string userName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserName {
    get { return userName_; }
    set {
      userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Email" field.</summary>
  public const int EmailFieldNumber = 2;
  private string email_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Email {
    get { return email_; }
    set {
      email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Status" field.</summary>
  public const int StatusFieldNumber = 3;
  private global::A4AUserStatus status_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A4AUserStatus Status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as A4AUser);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(A4AUser other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserName != other.UserName) return false;
    if (Email != other.Email) return false;
    if (Status != other.Status) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserName.Length != 0) hash ^= UserName.GetHashCode();
    if (Email.Length != 0) hash ^= Email.GetHashCode();
    if (Status != 0) hash ^= Status.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserName);
    }
    if (Email.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Email);
    }
    if (Status != 0) {
      output.WriteRawTag(24);
      output.WriteEnum((int) Status);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
    }
    if (Email.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
    }
    if (Status != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(A4AUser other) {
    if (other == null) {
      return;
    }
    if (other.UserName.Length != 0) {
      UserName = other.UserName;
    }
    if (other.Email.Length != 0) {
      Email = other.Email;
    }
    if (other.Status != 0) {
      Status = other.Status;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          UserName = input.ReadString();
          break;
        }
        case 18: {
          Email = input.ReadString();
          break;
        }
        case 24: {
          status_ = (global::A4AUserStatus) input.ReadEnum();
          break;
        }
      }
    }
  }

}

public sealed partial class A4AExpert : pb::IMessage<A4AExpert> {
  private static readonly pb::MessageParser<A4AExpert> _parser = new pb::MessageParser<A4AExpert>(() => new A4AExpert());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<A4AExpert> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AppForAnswersReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AExpert() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AExpert(A4AExpert other) : this() {
    expertName_ = other.expertName_;
    firstName_ = other.firstName_;
    lastName_ = other.lastName_;
    aliasEmail_ = other.aliasEmail_;
    realEmail_ = other.realEmail_;
    mobile_ = other.mobile_;
    companyName_ = other.companyName_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AExpert Clone() {
    return new A4AExpert(this);
  }

  /// <summary>Field number for the "ExpertName" field.</summary>
  public const int ExpertNameFieldNumber = 4;
  private string expertName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ExpertName {
    get { return expertName_; }
    set {
      expertName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "FirstName" field.</summary>
  public const int FirstNameFieldNumber = 2;
  private string firstName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string FirstName {
    get { return firstName_; }
    set {
      firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "LastName" field.</summary>
  public const int LastNameFieldNumber = 3;
  private string lastName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string LastName {
    get { return lastName_; }
    set {
      lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "AliasEmail" field.</summary>
  public const int AliasEmailFieldNumber = 5;
  private string aliasEmail_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AliasEmail {
    get { return aliasEmail_; }
    set {
      aliasEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "RealEmail" field.</summary>
  public const int RealEmailFieldNumber = 6;
  private string realEmail_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RealEmail {
    get { return realEmail_; }
    set {
      realEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Mobile" field.</summary>
  public const int MobileFieldNumber = 7;
  private string mobile_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Mobile {
    get { return mobile_; }
    set {
      mobile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "CompanyName" field.</summary>
  public const int CompanyNameFieldNumber = 8;
  private string companyName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CompanyName {
    get { return companyName_; }
    set {
      companyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as A4AExpert);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(A4AExpert other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ExpertName != other.ExpertName) return false;
    if (FirstName != other.FirstName) return false;
    if (LastName != other.LastName) return false;
    if (AliasEmail != other.AliasEmail) return false;
    if (RealEmail != other.RealEmail) return false;
    if (Mobile != other.Mobile) return false;
    if (CompanyName != other.CompanyName) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ExpertName.Length != 0) hash ^= ExpertName.GetHashCode();
    if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
    if (LastName.Length != 0) hash ^= LastName.GetHashCode();
    if (AliasEmail.Length != 0) hash ^= AliasEmail.GetHashCode();
    if (RealEmail.Length != 0) hash ^= RealEmail.GetHashCode();
    if (Mobile.Length != 0) hash ^= Mobile.GetHashCode();
    if (CompanyName.Length != 0) hash ^= CompanyName.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (FirstName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(FirstName);
    }
    if (LastName.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(LastName);
    }
    if (ExpertName.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(ExpertName);
    }
    if (AliasEmail.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(AliasEmail);
    }
    if (RealEmail.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(RealEmail);
    }
    if (Mobile.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(Mobile);
    }
    if (CompanyName.Length != 0) {
      output.WriteRawTag(66);
      output.WriteString(CompanyName);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ExpertName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ExpertName);
    }
    if (FirstName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
    }
    if (LastName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(LastName);
    }
    if (AliasEmail.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AliasEmail);
    }
    if (RealEmail.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RealEmail);
    }
    if (Mobile.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Mobile);
    }
    if (CompanyName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyName);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(A4AExpert other) {
    if (other == null) {
      return;
    }
    if (other.ExpertName.Length != 0) {
      ExpertName = other.ExpertName;
    }
    if (other.FirstName.Length != 0) {
      FirstName = other.FirstName;
    }
    if (other.LastName.Length != 0) {
      LastName = other.LastName;
    }
    if (other.AliasEmail.Length != 0) {
      AliasEmail = other.AliasEmail;
    }
    if (other.RealEmail.Length != 0) {
      RealEmail = other.RealEmail;
    }
    if (other.Mobile.Length != 0) {
      Mobile = other.Mobile;
    }
    if (other.CompanyName.Length != 0) {
      CompanyName = other.CompanyName;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 18: {
          FirstName = input.ReadString();
          break;
        }
        case 26: {
          LastName = input.ReadString();
          break;
        }
        case 34: {
          ExpertName = input.ReadString();
          break;
        }
        case 42: {
          AliasEmail = input.ReadString();
          break;
        }
        case 50: {
          RealEmail = input.ReadString();
          break;
        }
        case 58: {
          Mobile = input.ReadString();
          break;
        }
        case 66: {
          CompanyName = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class A4ASubscription : pb::IMessage<A4ASubscription> {
  private static readonly pb::MessageParser<A4ASubscription> _parser = new pb::MessageParser<A4ASubscription>(() => new A4ASubscription());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<A4ASubscription> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AppForAnswersReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4ASubscription() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4ASubscription(A4ASubscription other) : this() {
    subscription_ = other.subscription_;
    profession_ = other.profession_;
    category_ = other.category_;
    subCategory_ = other.subCategory_;
    expertName_ = other.expertName_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4ASubscription Clone() {
    return new A4ASubscription(this);
  }

  /// <summary>Field number for the "Subscription" field.</summary>
  public const int SubscriptionFieldNumber = 1;
  private string subscription_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Subscription {
    get { return subscription_; }
    set {
      subscription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Profession" field.</summary>
  public const int ProfessionFieldNumber = 2;
  private string profession_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Profession {
    get { return profession_; }
    set {
      profession_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Category" field.</summary>
  public const int CategoryFieldNumber = 3;
  private string category_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Category {
    get { return category_; }
    set {
      category_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "SubCategory" field.</summary>
  public const int SubCategoryFieldNumber = 4;
  private string subCategory_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SubCategory {
    get { return subCategory_; }
    set {
      subCategory_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "ExpertName" field.</summary>
  public const int ExpertNameFieldNumber = 5;
  private string expertName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ExpertName {
    get { return expertName_; }
    set {
      expertName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as A4ASubscription);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(A4ASubscription other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Subscription != other.Subscription) return false;
    if (Profession != other.Profession) return false;
    if (Category != other.Category) return false;
    if (SubCategory != other.SubCategory) return false;
    if (ExpertName != other.ExpertName) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Subscription.Length != 0) hash ^= Subscription.GetHashCode();
    if (Profession.Length != 0) hash ^= Profession.GetHashCode();
    if (Category.Length != 0) hash ^= Category.GetHashCode();
    if (SubCategory.Length != 0) hash ^= SubCategory.GetHashCode();
    if (ExpertName.Length != 0) hash ^= ExpertName.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Subscription.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Subscription);
    }
    if (Profession.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Profession);
    }
    if (Category.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Category);
    }
    if (SubCategory.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(SubCategory);
    }
    if (ExpertName.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(ExpertName);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Subscription.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Subscription);
    }
    if (Profession.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Profession);
    }
    if (Category.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Category);
    }
    if (SubCategory.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SubCategory);
    }
    if (ExpertName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ExpertName);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(A4ASubscription other) {
    if (other == null) {
      return;
    }
    if (other.Subscription.Length != 0) {
      Subscription = other.Subscription;
    }
    if (other.Profession.Length != 0) {
      Profession = other.Profession;
    }
    if (other.Category.Length != 0) {
      Category = other.Category;
    }
    if (other.SubCategory.Length != 0) {
      SubCategory = other.SubCategory;
    }
    if (other.ExpertName.Length != 0) {
      ExpertName = other.ExpertName;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          Subscription = input.ReadString();
          break;
        }
        case 18: {
          Profession = input.ReadString();
          break;
        }
        case 26: {
          Category = input.ReadString();
          break;
        }
        case 34: {
          SubCategory = input.ReadString();
          break;
        }
        case 42: {
          ExpertName = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class A4AProfession : pb::IMessage<A4AProfession> {
  private static readonly pb::MessageParser<A4AProfession> _parser = new pb::MessageParser<A4AProfession>(() => new A4AProfession());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<A4AProfession> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AppForAnswersReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AProfession() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AProfession(A4AProfession other) : this() {
    profession_ = other.profession_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AProfession Clone() {
    return new A4AProfession(this);
  }

  /// <summary>Field number for the "Profession" field.</summary>
  public const int ProfessionFieldNumber = 1;
  private string profession_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Profession {
    get { return profession_; }
    set {
      profession_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as A4AProfession);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(A4AProfession other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Profession != other.Profession) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Profession.Length != 0) hash ^= Profession.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Profession.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Profession);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Profession.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Profession);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(A4AProfession other) {
    if (other == null) {
      return;
    }
    if (other.Profession.Length != 0) {
      Profession = other.Profession;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          Profession = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class A4ACategory : pb::IMessage<A4ACategory> {
  private static readonly pb::MessageParser<A4ACategory> _parser = new pb::MessageParser<A4ACategory>(() => new A4ACategory());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<A4ACategory> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AppForAnswersReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4ACategory() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4ACategory(A4ACategory other) : this() {
    category_ = other.category_;
    profession_ = other.profession_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4ACategory Clone() {
    return new A4ACategory(this);
  }

  /// <summary>Field number for the "Category" field.</summary>
  public const int CategoryFieldNumber = 1;
  private string category_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Category {
    get { return category_; }
    set {
      category_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Profession" field.</summary>
  public const int ProfessionFieldNumber = 2;
  private string profession_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Profession {
    get { return profession_; }
    set {
      profession_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as A4ACategory);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(A4ACategory other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Category != other.Category) return false;
    if (Profession != other.Profession) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Category.Length != 0) hash ^= Category.GetHashCode();
    if (Profession.Length != 0) hash ^= Profession.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Category.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Category);
    }
    if (Profession.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Profession);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Category.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Category);
    }
    if (Profession.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Profession);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(A4ACategory other) {
    if (other == null) {
      return;
    }
    if (other.Category.Length != 0) {
      Category = other.Category;
    }
    if (other.Profession.Length != 0) {
      Profession = other.Profession;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          Category = input.ReadString();
          break;
        }
        case 18: {
          Profession = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class A4ASubCategory : pb::IMessage<A4ASubCategory> {
  private static readonly pb::MessageParser<A4ASubCategory> _parser = new pb::MessageParser<A4ASubCategory>(() => new A4ASubCategory());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<A4ASubCategory> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AppForAnswersReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4ASubCategory() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4ASubCategory(A4ASubCategory other) : this() {
    subCategory_ = other.subCategory_;
    category_ = other.category_;
    profession_ = other.profession_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4ASubCategory Clone() {
    return new A4ASubCategory(this);
  }

  /// <summary>Field number for the "SubCategory" field.</summary>
  public const int SubCategoryFieldNumber = 1;
  private string subCategory_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SubCategory {
    get { return subCategory_; }
    set {
      subCategory_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Category" field.</summary>
  public const int CategoryFieldNumber = 2;
  private string category_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Category {
    get { return category_; }
    set {
      category_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Profession" field.</summary>
  public const int ProfessionFieldNumber = 3;
  private string profession_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Profession {
    get { return profession_; }
    set {
      profession_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as A4ASubCategory);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(A4ASubCategory other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SubCategory != other.SubCategory) return false;
    if (Category != other.Category) return false;
    if (Profession != other.Profession) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SubCategory.Length != 0) hash ^= SubCategory.GetHashCode();
    if (Category.Length != 0) hash ^= Category.GetHashCode();
    if (Profession.Length != 0) hash ^= Profession.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SubCategory.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(SubCategory);
    }
    if (Category.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Category);
    }
    if (Profession.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Profession);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SubCategory.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SubCategory);
    }
    if (Category.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Category);
    }
    if (Profession.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Profession);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(A4ASubCategory other) {
    if (other == null) {
      return;
    }
    if (other.SubCategory.Length != 0) {
      SubCategory = other.SubCategory;
    }
    if (other.Category.Length != 0) {
      Category = other.Category;
    }
    if (other.Profession.Length != 0) {
      Profession = other.Profession;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          SubCategory = input.ReadString();
          break;
        }
        case 18: {
          Category = input.ReadString();
          break;
        }
        case 26: {
          Profession = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class A4AMessage : pb::IMessage<A4AMessage> {
  private static readonly pb::MessageParser<A4AMessage> _parser = new pb::MessageParser<A4AMessage>(() => new A4AMessage());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<A4AMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AppForAnswersReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AMessage(A4AMessage other) : this() {
    messageId_ = other.messageId_;
    content_ = other.content_;
    contentType_ = other.contentType_;
    a4ASubCategory_ = other.a4ASubCategory_;
    userName_ = other.userName_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A4AMessage Clone() {
    return new A4AMessage(this);
  }

  /// <summary>Field number for the "MessageId" field.</summary>
  public const int MessageIdFieldNumber = 1;
  private string messageId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MessageId {
    get { return messageId_; }
    set {
      messageId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Content" field.</summary>
  public const int ContentFieldNumber = 2;
  private string content_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Content {
    get { return content_; }
    set {
      content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "ContentType" field.</summary>
  public const int ContentTypeFieldNumber = 3;
  private global::A4AContentType contentType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A4AContentType ContentType {
    get { return contentType_; }
    set {
      contentType_ = value;
    }
  }

  /// <summary>Field number for the "A4ASubCategory" field.</summary>
  public const int A4ASubCategoryFieldNumber = 4;
  private string a4ASubCategory_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string A4ASubCategory {
    get { return a4ASubCategory_; }
    set {
      a4ASubCategory_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "UserName" field.</summary>
  public const int UserNameFieldNumber = 6;
  private string userName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserName {
    get { return userName_; }
    set {
      userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as A4AMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(A4AMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MessageId != other.MessageId) return false;
    if (Content != other.Content) return false;
    if (ContentType != other.ContentType) return false;
    if (A4ASubCategory != other.A4ASubCategory) return false;
    if (UserName != other.UserName) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MessageId.Length != 0) hash ^= MessageId.GetHashCode();
    if (Content.Length != 0) hash ^= Content.GetHashCode();
    if (ContentType != 0) hash ^= ContentType.GetHashCode();
    if (A4ASubCategory.Length != 0) hash ^= A4ASubCategory.GetHashCode();
    if (UserName.Length != 0) hash ^= UserName.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (MessageId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(MessageId);
    }
    if (Content.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Content);
    }
    if (ContentType != 0) {
      output.WriteRawTag(24);
      output.WriteEnum((int) ContentType);
    }
    if (A4ASubCategory.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(A4ASubCategory);
    }
    if (UserName.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(UserName);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MessageId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MessageId);
    }
    if (Content.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
    }
    if (ContentType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ContentType);
    }
    if (A4ASubCategory.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(A4ASubCategory);
    }
    if (UserName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(A4AMessage other) {
    if (other == null) {
      return;
    }
    if (other.MessageId.Length != 0) {
      MessageId = other.MessageId;
    }
    if (other.Content.Length != 0) {
      Content = other.Content;
    }
    if (other.ContentType != 0) {
      ContentType = other.ContentType;
    }
    if (other.A4ASubCategory.Length != 0) {
      A4ASubCategory = other.A4ASubCategory;
    }
    if (other.UserName.Length != 0) {
      UserName = other.UserName;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          MessageId = input.ReadString();
          break;
        }
        case 18: {
          Content = input.ReadString();
          break;
        }
        case 24: {
          contentType_ = (global::A4AContentType) input.ReadEnum();
          break;
        }
        case 34: {
          A4ASubCategory = input.ReadString();
          break;
        }
        case 50: {
          UserName = input.ReadString();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
